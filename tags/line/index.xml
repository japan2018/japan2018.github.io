<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Line on Some Title</title>
    <link>https://japan2018.github.io/tags/line/</link>
    <description>Recent content in Line on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/line/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Notify LINE of TV appearance information of your favorite entertainer</title>
      <link>https://japan2018.github.io/notify-line-of-tv-appearance-information-of-your-favorite-entertainer-fef55/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/notify-line-of-tv-appearance-information-of-your-favorite-entertainer-fef55/</guid>
      <description>#Purpose  I miss watching my favorite idol and comedians appear on TV, so I decided to notify them via LINE. #Overview Yahoo! TV G Guide was used to obtain information on TV programs, and to notify using LINE Notify. I set the program to run on Raspberrypi every morning at 9am.
Acquisition of program information For example, in the case of a terrestrial program of &amp;ldquo;Chiaki Bimura&amp;rdquo; (Regional setting Tokyo), such a URL is used.</description>
    </item>
    
    <item>
      <title>[LINE Messaging API] Create parrot return BOT in Python</title>
      <link>https://japan2018.github.io/line-messaging-api-create-parrot-return-bot-in-python-fd865/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/line-messaging-api-create-parrot-return-bot-in-python-fd865/</guid>
      <description>##チュートリアル  ####【メッセージを受信する場合】 WebhookHandlerを下記の様に設定 @handler.add(MessageEvent, message=TextMessage)
from flask import Flask, request, abort from linebot import ( LineBotApi, WebhookHandler ) from linebot.exceptions import ( InvalidSignatureError ) from linebot.models import ( MessageEvent, TextMessage, TextSendMessage, ) app = Flask(__name__) line_bot_api = LineBotApi(&amp;#39;YOUR_CHANNEL_ACCESS_TOKEN&amp;#39;) handler = WebhookHandler(&amp;#39;YOUR_CHANNEL_SECRET&amp;#39;) @app.route(&amp;#34;/callback&amp;#34;, methods=[&amp;#39;POST&amp;#39;]) def callback(): # get X-Line-Signature header value signature = request.headers[&amp;#39;X-Line-Signature&amp;#39;] # get request body as text body = request.get_data(as_text=True) app.logger.info(&amp;#34;Request body: &amp;#34; + body) # handle webhook body try: handler.</description>
    </item>
    
  </channel>
</rss>