<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LINEWORKS on Some Title</title>
    <link>https://japan2018.github.io/tags/lineworks/</link>
    <description>Recent content in LINEWORKS on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/lineworks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[AWS] I made a reminder BOT with LINE WORKS (implementation)</title>
      <link>https://japan2018.github.io/aws-i-made-a-reminder-bot-with-line-works-implementation-ff5a2/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/aws-i-made-a-reminder-bot-with-line-works-implementation-ff5a2/</guid>
      <description>It is the 14th day of LINEWORKS Advent Calendar.  This time, we will introduce the implementation of the reminder BOT introduced in LINEWORKS Advent Calendar Day 7.
[Repost] BOT screen and overall structure The reminder BOT consists of three Lambda, and is implemented with Python3.7.
①. Processing of messages sent from LINE WORKS and notification to SQS ②. Poll the events stored in the table and notify SQS ③. Notify the LINEWORKS server of the message received from SQS</description>
    </item>
    
  </channel>
</rss>