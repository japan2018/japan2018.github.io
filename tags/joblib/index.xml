<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>joblib on Memo Tut</title>
    <link>https://memotut.com/tags/joblib/</link>
    <description>Recent content in joblib on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/joblib/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[TF2.0 Application] High-speed parallelization of general-purpose Data Augmentation with the strong dataset function of TF</title>
      <link>https://memotut.com/tf2.0-application-high-speed-parallelization-of-general-purpose-data-augmentation-with-the-strong-dataset-function-of-tf-52844/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/tf2.0-application-high-speed-parallelization-of-general-purpose-data-augmentation-with-the-strong-dataset-function-of-tf-52844/</guid>
      <description>#Introduction  This article is the previous article &amp;ldquo;The story that the dataset function that can be used in TensorFlow was strong&amp;quot;&amp;quot;[[TF2.0application]tf.data.&amp;ldquo;DataAugmentationisfasterthanDataAugmentation]&amp;quot;(https://qiita.com/Suguru_Toyohara/items/49c2914b21615b554afa)&amp;quot;, which is a slightly enhanced version of Data Augmentation.
While using tf.data.Dataset for speed enhancement and keras.preprocessing.image system ** We have succeeded in realizing code that can be processed in parallel. ** I will post the actual mechanism and how it came to this point after the code.</description>
    </item>
    
  </channel>
</rss>