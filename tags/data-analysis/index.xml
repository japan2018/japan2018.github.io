<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> data analysis on Some Title</title>
    <link>https://japan2018.github.io/tags/data-analysis/</link>
    <description>Recent content in  data analysis on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/data-analysis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CUM_plot often seen at the manufacturing site did not fall on the net, so I made it with python</title>
      <link>https://japan2018.github.io/cum_plot-often-seen-at-the-manufacturing-site-did-not-fall-on-the-net-so-i-made-it-with-python-fa323/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/cum_plot-often-seen-at-the-manufacturing-site-did-not-fall-on-the-net-so-i-made-it-with-python-fa323/</guid>
      <description>0. In the beginning  ============ CUM_plot is often used when performing failure analysis at the production site. If it is a normal distribution, it becomes a straight line, and it is easy to understand whether it is an outlier or a mixture of multiple normal distributions. When I suddenly want to create it with python, the CUM in Figure 1 comes out, but the CUM in Figure 2 does not come out.</description>
    </item>
    
    <item>
      <title>Causal reasoning using machine learning (arrangement of causal reasoning methods)</title>
      <link>https://japan2018.github.io/causal-reasoning-using-machine-learning-arrangement-of-causal-reasoning-methods-fa213/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/causal-reasoning-using-machine-learning-arrangement-of-causal-reasoning-methods-fa213/</guid>
      <description># Causal reasoning using machine learning   A rough understanding and notes of when to use causal reasoning using machine learning methods that have been actively used in recent years (Memorandum) Basically, the current causal reasoning method is summarized as a flow chart.
 Introduction Causal reasoning is a series of statistical methods aimed at answering the cause of an outcome. Generally, statistical approaches such as regression analysis focus on quantifying how changes in X are related to changes in Y.</description>
    </item>
    
    <item>
      <title>Predict from various data in Python using Facebook Prophet, a time series prediction tool</title>
      <link>https://japan2018.github.io/predict-from-various-data-in-python-using-facebook-prophet-a-time-series-prediction-tool-f8a74/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/predict-from-various-data-in-python-using-facebook-prophet-a-time-series-prediction-tool-f8a74/</guid>
      <description>&amp;gt;This article is [Greg Rafferty](https://towardsdatascience.com/@raffg?source=post_page-----29810eb57e66----------------------)Translatedfrom&amp;quot;[ForecastinginPythonwithFacebookProphet](https://towardsdatascience.com/forecasting-in-python-with-facebook-prophet-29810eb57e66)&amp;quot; published in November 2019 by Mr. ..  This article is published with the permission of the original author.
I&amp;rsquo;m Greg Rafferty, a data scientist in the Bay Area. You can also check the code used in this project from my github.
In this article, I&amp;rsquo;ll show you how to use the Facebook Prophet prediction library to make a variety of predictions, and some advanced techniques to use your expertise to handle trend inconsistencies.</description>
    </item>
    
    <item>
      <title>Books on data science to read in 2020</title>
      <link>https://japan2018.github.io/books-on-data-science-to-read-in-2020-fe474/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/books-on-data-science-to-read-in-2020-fe474/</guid>
      <description>&amp;gt;This article was published in November 2019 by [Przemek Chojecki](https://towardsdatascience.com/@pchojecki),[[DataScienceBooksyoushouldreadin2020](https://towardsdatascience.com/data-science-books-you-should-read-in-2020-358f70e1d9b2)‚Äù.  This article is published with the permission of the original author.
Data science is arguably one of the hottest markets right now. Almost all companies are looking for or considering a data science role.
So it&amp;rsquo;s a great time to become a data scientist. Or if you&amp;rsquo;re already a data scientist and want to promote to a senior position, it&amp;rsquo;s a great time to hone your skills.</description>
    </item>
    
    <item>
      <title>10 questions to check before web scraping</title>
      <link>https://japan2018.github.io/10-questions-to-check-before-web-scraping-ff0ca/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/10-questions-to-check-before-web-scraping-ff0ca/</guid>
      <description>With [Web scraping](https://www.octoparse.jp/), you can get the information you need in seconds and the great value behind it. But before we do that, there are 10 questions to ask.  #1.Is Web scraping illegal?
[robot.txt](https://en.wikipedia.org/wiki/Robots_exclusion_standard If you are allowed to crawl according to the terms of the file, we recommend that you read the Terms of Service (ToS) of the target website in advance to assess the legal feasibility of your data project.</description>
    </item>
    
    <item>
      <title>How to speed up Pandas apply method with just one sentence (with verification calculation)</title>
      <link>https://japan2018.github.io/how-to-speed-up-pandas-apply-method-with-just-one-sentence-with-verification-calculation-fc4d2/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/how-to-speed-up-pandas-apply-method-with-just-one-sentence-with-verification-calculation-fc4d2/</guid>
      <description>#Conclusion  Just add swifter method before Pandas apply method
Concrete example import pandas as pd import numpy as np import swifter # Create a suitable DataFrame df = pd.DataFrame({&amp;#39;col&amp;#39;: np.random.normal(size=10000000)}) # Add swifter method before apply method. %time df[&amp;#39;col2&amp;#39;] = df[&amp;#39;col&amp;#39;].swifter.apply(lambda x: x**2) # Wall time: 50 ms # For comparison (normal pandas apply method) %time df[&amp;#39;col2&amp;#39;] = df[&amp;#39;col&amp;#39;].apply(lambda x: x**2) # Wall time: 3.48 s How to install $ pip install -U pandas # upgrade pandas $ pip install swifter In case of ```terminal:conda $ conda update pandas # upgrade pandas $ conda install -c conda-forge swifter</description>
    </item>
    
  </channel>
</rss>