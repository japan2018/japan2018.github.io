<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rotation on Memo Tut</title>
    <link>https://memotut.com/tags/rotation/</link>
    <description>Recent content in Rotation on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/rotation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Cluster 3D rotations</title>
      <link>https://memotut.com/cluster-3d-rotations-319c4/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/cluster-3d-rotations-319c4/</guid>
      <description>#Background  Kaggle&amp;rsquo;s competition to predict the 3D posture of a carWeexaminedtheapproachofsolvingtheproblemofseekingasaclassclassification.Afterall,thecarcannotrotatefreely,andsinceithasonlyfreedomtorotatealmostparalleltotheroad,itisbetterbecausethemodelthatregressestherotationanglewithsin(θ),cos(θ) is better. Now in the warehouse. There seems to be no need for rotation angle clustering or anything, but it was interesting to do so I will leave it as a memo.
By the way, it may be meaningful to solve as a class classification, for example, Attitude estimation of artificial satellites with unlimited rotation. May.
Clustering algorithm When dealing with rotation, if you use scipy.</description>
    </item>
    
  </channel>
</rss>