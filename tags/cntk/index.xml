<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> CNTK on Some Title</title>
    <link>https://japan2018.github.io/tags/cntk/</link>
    <description>Recent content in  CNTK on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/cntk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>XAI : AdvImg - Adversarial Images</title>
      <link>https://japan2018.github.io/xai-advimg-adversarial-images-fdc7a/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/xai-advimg-adversarial-images-fdc7a/</guid>
      <description>#Target  I tried to generate a hostile image using Microsoft Cognitive Toolkit (CNTK).
It is assumed that CNTK and NVIDIA GPU CUDA are installed.
#Introduction
What is a hostile image? A very interesting model in the field of deep learning is the Adversarial Generating Network (GAN) [1].AdversarialExamples[2][3] influenced the birth of GAN. We will focus on the images here, so we will be dealing with hostile images.
Adversarial images are known to be a very effective way to deceive trained image recognition models.</description>
    </item>
    
    <item>
      <title>Computer Vision : Object Detection Part1 - Bounding Box preprocessing</title>
      <link>https://japan2018.github.io/computer-vision-object-detection-part1-bounding-box-preprocessing-f94eb/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/computer-vision-object-detection-part1-bounding-box-preprocessing-f94eb/</guid>
      <description>#Target  Summary of object detection using Microsoft Cognitive Toolkit (CNTK).
Part 1 prepares for object detection using Microsoft Cognitive Toolkit. As a training data set for object detection, Microsoft Common Objects in Context (COCO) provided by Microsoft is used.
We will introduce them in the following order.
 Object detection by neural network Pretreatment of bounding box Dimension Clustering for creating Anchor Box Create a file to be read by the built-in reader provided by CNTK  #Introduction</description>
    </item>
    
  </channel>
</rss>