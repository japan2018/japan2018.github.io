<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Summary on Memo Tut</title>
    <link>https://memotut.com/tags/summary/</link>
    <description>Recent content in  Summary on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/summary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>After hitting the Qiita API with Python to get a list of articles for beginners, we will worship God articles</title>
      <link>https://memotut.com/after-hitting-the-qiita-api-with-python-to-get-a-list-of-articles-for-beginners-we-will-worship-god-articles-97e78/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/after-hitting-the-qiita-api-with-python-to-get-a-list-of-articles-for-beginners-we-will-worship-god-articles-97e78/</guid>
      <description>## Introduction  Qiita&amp;rsquo;s &amp;ldquo;Beginner&amp;rdquo; tag and &amp;ldquo;New Programmer Support&amp;rdquo; tag articles for beginners As a new QA engineer, everything is very helpful. Unfortunately, the individual tag page only shows trends and new articles, The specifications make it difficult to find good articles in the past. In this article, first use the Qiita API to write an article for beginners (:= Article with the tag &amp;ldquo;Beginner&amp;rdquo; OR &amp;ldquo;Newcomer programmer support&amp;rdquo;) After creating a program to output all, next read each article in the output list in descending order of likes I would like to introduce the God articles that I felt &amp;ldquo;This is really helpful!</description>
    </item>
    
    <item>
      <title>[The Road to Intermediate Python] Article Link Summary</title>
      <link>https://memotut.com/the-road-to-intermediate-python-article-link-summary-fb3f3/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/the-road-to-intermediate-python-article-link-summary-fb3f3/</guid>
      <description>#Introduction  I need to make better use of Python used in my research, so I will compile my personal writing.
Article link  [Route to Intermediate] Understanding Python Properties [Road to Intermediate] Python seems to be all objects [Road to Intermediate] What are Python&amp;rsquo;s *args and **kwargs?  [Route to Intermediate] Utilizing Python&amp;rsquo;s built-in function vars [Route to Intermediate Python] Dynamically specify execution method by variable name [Road to Intermediate Python] Enable comparison operation of original class [Route to Intermediate Python] Call a class instance with call like a function [Road to Python intermediate] define in in original class [Route to Intermediate Python] Use ternary operator [Path to Intermediate Python] using if statement in list comprehension [Route to Intermediate Python] Use lambda expression [Path to Python Intermediate] Install packages in batch with pip [Route to Intermediate Python] Define getattr function in class  </description>
    </item>
    
  </channel>
</rss>