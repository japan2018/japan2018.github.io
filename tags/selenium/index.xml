<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Selenium on Some Title</title>
    <link>https://japan2018.github.io/tags/selenium/</link>
    <description>Recent content in Selenium on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/selenium/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to automatically upload a .gpx file to Strava</title>
      <link>https://japan2018.github.io/how-to-automatically-upload-a-.gpx-file-to-strava-fe1a7/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/how-to-automatically-upload-a-.gpx-file-to-strava-fe1a7/</guid>
      <description>## 1. Find out which version of Google Chrome you are using  Image is from https://www.iijmio.jp/thissite/version
2. Download the &amp;ldquo;chromedriver&amp;rdquo; software that matches Google Chrome   Download it from here.
  The downloaded file is in .zip format, so put the unpacked executable file into your directory.
  3. Open the terminal and run the following in the terminal pip install beautifulsoup4 selenium requests 4. Rewrite the &amp;ldquo;email address&amp;rdquo; and &amp;ldquo;password&amp;rdquo; of the following source code according to your strava account.</description>
    </item>
    
    <item>
      <title>python selenium chromedriver beautifulsoup</title>
      <link>https://japan2018.github.io/python-selenium-chromedriver-beautifulsoup-f8946/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-selenium-chromedriver-beautifulsoup-f8946/</guid>
      <description>#### Sample code 1 (simple display only)  import time from selenium import webdriver import chromedriver_binary driver = webdriver.Chrome() driver.get(&amp;#39;https://xxx&amp;#39;) time.sleep(2) # 2 second wait driver.close() driver.quit() Sample code 2 (headless mode: Do not display &amp;amp; parse with beautiful soup) from bs4 import BeautifulSoup import time from selenium import webdriver import chromedriver_binary from selenium.webdriver.chrome.options import Options option = Options() option.add_argument(&amp;#39;--headless&amp;#39;) driver = webdriver.Chrome(options=option) driver.get(&amp;#39;https://xxx&amp;#39;) time.sleep(2) # 2 second wait # If you want to parse soup = BeautifulSoup(driver.</description>
    </item>
    
    <item>
      <title>A module summary that automates and assists the installation of WebDriver with Python</title>
      <link>https://japan2018.github.io/a-module-summary-that-automates-and-assists-the-installation-of-webdriver-with-python-f895e/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/a-module-summary-that-automates-and-assists-the-installation-of-webdriver-with-python-f895e/</guid>
      <description>#Summary of modules that help install WebDriver with Python  When scraping with Selenium etc., it may not work if the version of WebDriver is different, so I searched for a module that arbitrarily matches the version and summarized it.
#For Chrome
chromedriver-autoinstaller  License: MIT Compatible OS: Widows/Mac/Linux  How to install pip install chromedriver-autoinstaller How to use Add to the code to do the following
from selenium import webdriver import chromedriver_autoinstaller chromedriver_autoinstaller.</description>
    </item>
    
    <item>
      <title>I made a script to greet you at my Koshien</title>
      <link>https://japan2018.github.io/i-made-a-script-to-greet-you-at-my-koshien-ff45b/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/i-made-a-script-to-greet-you-at-my-koshien-ff45b/</guid>
      <description>I tried to automate a certain task in a browser game called &amp;quot;My Koshien&amp;quot; using Python.  I don&amp;rsquo;t use Python at all, so it&amp;rsquo;s a beginner level code. Please note.
What is my Koshien High school baseball simulation game. Although it is a baseball game, the actual game is played by the CPU, and the main player is coaching and coaching. Points are required for this instruction, and among some points there is a Passion PT, which can be increased by greeting another school (other player).</description>
    </item>
    
    <item>
      <title>Automatic login to ServiceNow with Selenium Web Driver</title>
      <link>https://japan2018.github.io/automatic-login-to-servicenow-with-selenium-web-driver-fdd5f/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/automatic-login-to-servicenow-with-selenium-web-driver-fdd5f/</guid>
      <description># ◆Overview   Using Selenium WebDriver, which is used for automation of Web UI tests, I tried to log in ServiceNow automatically.  ◆Operating environment  OS: Windows10 Python version: 3.8.0  Preparation Creating an instance of ServiceNow  You can create a developer instance by registering an account from the ServiceNow Developers page. Make sure to write down the instance URL and the initial information of the admin account when the creation is completed.</description>
    </item>
    
  </channel>
</rss>