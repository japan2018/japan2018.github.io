<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kaggle on Some Title</title>
    <link>https://japan2018.github.io/tags/kaggle/</link>
    <description>Recent content in Kaggle on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/kaggle/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kaggle:Introduction to Manual Feature Engineering その1</title>
      <link>https://japan2018.github.io/kaggleintroduction-to-manual-feature-engineering-%E3%81%9D%E3%81%AE1-fcbd2/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/kaggleintroduction-to-manual-feature-engineering-%E3%81%9D%E3%81%AE1-fcbd2/</guid>
      <description>https://www.kaggle.com/willkoehrsen/introduction-to-manual-feature-engineering  I thought it was better to take a note of what I was doing. Qiita says that memos are OK, so write it down here.
It&amp;rsquo;s complicated to think of combining various tables in this Notebook,
Just group by client_id and count, and add that line to application_train to increase the feature quantity, It&amp;rsquo;s easy to think.
But I wonder if this KDE plot is useful in many places.</description>
    </item>
    
    <item>
      <title>Day 66 [Introduction to Kaggle] The easiest Titanic forecast</title>
      <link>https://japan2018.github.io/day-66-introduction-to-kaggle-the-easiest-titanic-forecast-fbc03/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/day-66-introduction-to-kaggle-the-easiest-titanic-forecast-fbc03/</guid>
      <description>I tried to challenge &amp;quot;[Titanic: Machine Learning from Disaster](https://www.kaggle.com/c/titanic/notebooks)&amp;quot; of #Kaggle.  Kaggle is like a fighting party where you compete for machine learning. When I entered, there was content for beginners, so I will watch the guidance video at once.

Very fast English! ! ! The contents were an outline of the Titanic accident, explanation of the dataset, tutorial, how to use Kaggle, etc.
I can&amp;rsquo;t hear it because it&amp;rsquo;s too fast to speak, so [Japanese] Titanic sinking accident (https://ja.</description>
    </item>
    
    <item>
      <title>Approach explanation for beginners who are in the top 1.5% (0.83732) in Kaggle Titanic_2</title>
      <link>https://japan2018.github.io/approach-explanation-for-beginners-who-are-in-the-top-1.5-0.83732-in-kaggle-titanic_2-fb6aa/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/approach-explanation-for-beginners-who-are-in-the-top-1.5-0.83732-in-kaggle-titanic_2-fb6aa/</guid>
      <description>[Last time](https://qiita.com/shiroino11111/items/bc3889fa38ff32d46c13),followedby[KaggleTitanic](https://www.kaggle.com/c/titanic/submissions)totop1.5%(0.83732) I will explain the approach of.  The code used is titanic(0.83732)_2 from Github. This time, we will extend the submission score to 0.81339 and prepare for the next time it will be 0.83732. Also, before forecasting, we will visualize the data used in Last time and analyze the data.
###1. Import the required library and read the CSV.
import pandas as pd import numpy as np import matplotlib.</description>
    </item>
    
    <item>
      <title>Kaggle Related Summary</title>
      <link>https://japan2018.github.io/kaggle-related-summary-fc867/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/kaggle-related-summary-fc867/</guid>
      <description>This is a collection of information that will help you capture Kaggle.  (Will be updated at any time)
▪︎website https://naotaka1128.hatenadiary.jp/entry/kaggle-compe-tips
◼︎ Mechanism Curry&amp;rsquo;s commentary http://www.currypurin.com/entry/2018/02/21/011316
◾️ Book Data Analysis Technology Wins at Kaggle https://www.amazon.co.jp/dp/B07YTDBC3Z/
◾️Booth kaggle tutorial 4th edition https://booth.pm/ja/items/1567594
■ slack https://kaggler-ja.herokuapp.com
■ discord Curry&amp;rsquo;s
■ wiki http://kaggler-ja-wiki.herokuapp.com/
■ coursera https://ja.coursera.org/learn/competitive-data-science
◾️ Summary article kaggle api related https://qiita.com/uni-3/items/f1fdbeeddd08ca22c80f
https://qiita.com/shunkakinoki/items/1f58e218f8f6b31ad0bf</description>
    </item>
    
    <item>
      <title>Best practices for data manipulation with pandas</title>
      <link>https://japan2018.github.io/best-practices-for-data-manipulation-with-pandas-f7ed4/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/best-practices-for-data-manipulation-with-pandas-f7ed4/</guid>
      <description>After preprocessing the data with machine learning, with a hypothesis,  Play with data? Play with? I think there are phases, At that time, how to control pandas freely is I think it will be important.
I myself have a little programming experience and database knowledge,
***pandas DataFrame [] ← This is too complicated! ! ***
Especially, it is difficult to narrow down by conditions.
train[train[&amp;#34;company_id&amp;#34;] == 1088][&amp;#34;meter_reading&amp;#34;] It&amp;rsquo;s confusing at this point, but if this is train_weather_df, it will be ruined</description>
    </item>
    
  </channel>
</rss>