<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> For Beginners on Some Title</title>
    <link>https://japan2018.github.io/tags/for-beginners/</link>
    <description>Recent content in  For Beginners on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/for-beginners/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] I want to collect specific files scattered in each folder in one place</title>
      <link>https://japan2018.github.io/python-i-want-to-collect-specific-files-scattered-in-each-folder-in-one-place-fdef0/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-i-want-to-collect-specific-files-scattered-in-each-folder-in-one-place-fdef0/</guid>
      <description>## Introduction  Qiita&amp;rsquo;s first post. I&amp;rsquo;ve always taken care of me, so I&amp;rsquo;m about to publish what I&amp;rsquo;ve finished.
I want to collect specific files scattered in each folder in one place Won&amp;rsquo;t this happen often? All Folders have the same folder structure, and I want to collect sleeping files (this time mdb files) in sub-sub-folder somewhere.
##Code execution I will forget it every time, so I will leave it below.</description>
    </item>
    
    <item>
      <title>Flask introduction ~ Blueprint application note</title>
      <link>https://japan2018.github.io/flask-introduction-~-blueprint-application-note-fb7d1/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/flask-introduction-~-blueprint-application-note-fb7d1/</guid>
      <description>Let&#39;s try the title as easily as possible.  Blueprint allows you to implement the functionality of your application in pieces. Blueprint is officially recommended as a way to organize bloated projects.
Install Flask $ sudo pip3 install flask Directory structure $ cd ~/workspace/sample-flask/ $ls server.py from flask import Flask app = Flask(__name__) @app.route(&amp;#39;/&amp;#39;) def func_1(): return&amp;#39;Hello world&amp;#39; @app.route(&amp;#39;/test&amp;#39;) def func_2(): return&amp;#39;Test&amp;#39; if __name__ ==&amp;#39;__main__&amp;#39;: app.run(host=&amp;#39;0.0.0.0&amp;#39;, port=80, debug=True) Execution command $python3 server.</description>
    </item>
    
    <item>
      <title>Mayungo&#39;s Python learning episode 7: I tried printing with if, elif, else</title>
      <link>https://japan2018.github.io/mayungos-python-learning-episode-7-i-tried-printing-with-if-elif-else-fccb7/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/mayungos-python-learning-episode-7-i-tried-printing-with-if-elif-else-fccb7/</guid>
      <description>This time we will work on if, elif, and else.  The same content is also shown in the video, so please see it if you like. 
When writing a program, there are situations where you want to make different actions depending on the conditions.
Now put 1 in the variable num.
If num is 1, 1 is output. When they are the same, they are written as ==.</description>
    </item>
    
    <item>
      <title>I tried to summarize the string operation of Python</title>
      <link>https://japan2018.github.io/i-tried-to-summarize-the-string-operation-of-python-fe55c/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/i-tried-to-summarize-the-string-operation-of-python-fe55c/</guid>
      <description>#Introduction  I&amp;rsquo;m coding in Python, and I had a built-in method that I could use when working with strings, so I&amp;rsquo;ve put it together as a memorandum. As for the method of dividing the system, we have systematized it on an individual basis, so don&amp;rsquo;t worry.
#Orthopedics
format method The value in the string can be described later using index It becomes easy to edit the character string when used together with the variable.</description>
    </item>
    
  </channel>
</rss>