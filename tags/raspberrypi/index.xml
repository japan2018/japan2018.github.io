<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RaspberryPi on Some Title</title>
    <link>https://japan2018.github.io/tags/raspberrypi/</link>
    <description>Recent content in RaspberryPi on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/raspberrypi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Notify LINE of TV appearance information of your favorite entertainer</title>
      <link>https://japan2018.github.io/notify-line-of-tv-appearance-information-of-your-favorite-entertainer-fef55/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/notify-line-of-tv-appearance-information-of-your-favorite-entertainer-fef55/</guid>
      <description>#Purpose  I miss watching my favorite idol and comedians appear on TV, so I decided to notify them via LINE. #Overview Yahoo! TV G Guide was used to obtain information on TV programs, and to notify using LINE Notify. I set the program to run on Raspberrypi every morning at 9am.
Acquisition of program information For example, in the case of a terrestrial program of &amp;ldquo;Chiaki Bimura&amp;rdquo; (Regional setting Tokyo), such a URL is used.</description>
    </item>
    
    <item>
      <title>GPS tracking with Raspberry Pi 4B&#43;BU-353S4 (Python)</title>
      <link>https://japan2018.github.io/gps-tracking-with-raspberry-pi-4b-bu-353s4-python-ff917/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/gps-tracking-with-raspberry-pi-4b-bu-353s4-python-ff917/</guid>
      <description>#Raspai 4 + BU-353S4 + Python GPS tracking  Get GPS information using Raspberry Pi I use Raspberry Pi 4B, but I think the same applies to 3 and so on.
Items to prepare  GLOBALSAT BU-353S4 =&amp;gt; USB connected GPS sensor Raspberry Pi 4  Procedure Install required packages
sudo apt-get upgrade sudo apt-get install gpsd gpsd-clients python-gps cu Insert BU-353S4 into USB and confirm the connection with the following command</description>
    </item>
    
    <item>
      <title>Put Ubuntu in Raspi, put Docker on it, and control GPIO with python from container</title>
      <link>https://japan2018.github.io/put-ubuntu-in-raspi-put-docker-on-it-and-control-gpio-with-python-from-container-feda9/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/put-ubuntu-in-raspi-put-docker-on-it-and-control-gpio-with-python-from-container-feda9/</guid>
      <description>#Introduction  It became a confusing title, but it is this image #environment Development PC: Mac Mojave RaspBerry Pi4 Memory 4GB SD card 16GB
Write #Ubuntu 19.10 to SD https://ubuntu.com/download/raspberry-pi I downloaded the 64-bit version from and wrote it using balenaEtchar.
Install #docker on Ubuntu Enter ssh or something in Ubuntu
sudo apt-get install docker-ce You can install it with.
sudo usermod -aG docker ubuntu You can use docker without using sudo.</description>
    </item>
    
    <item>
      <title>Production of thermal management system with Raspberry Pi and ESP32 (2) Transmission device production</title>
      <link>https://japan2018.github.io/production-of-thermal-management-system-with-raspberry-pi-and-esp32-2-transmission-device-production-fd465/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/production-of-thermal-management-system-with-raspberry-pi-and-esp32-2-transmission-device-production-fd465/</guid>
      <description>Creating a device that sends temperature and humidity data to a Raspberry Pi.  Overall layout Parts are soldered to the universal board. ##circuit Connect SHT31 and ssd1306 in parallel with i2c. That said, just connect the four lines in parallel. Easy easy.
Confirm i2c address Once the wiring is decided, check the address on the breadboard. Code referenced this page.
Run the code and note the address that came out.</description>
    </item>
    
    <item>
      <title>I want to be notified of the connection environment when the RaspberryPi connects to the network</title>
      <link>https://japan2018.github.io/i-want-to-be-notified-of-the-connection-environment-when-the-raspberrypi-connects-to-the-network-ffadd/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/i-want-to-be-notified-of-the-connection-environment-when-the-raspberrypi-connects-to-the-network-ffadd/</guid>
      <description>I bought a Raspberry Pi 4. So I put ArchLinux in the SD card.  This time, I do not buy LEDs separately, but it will be operated in a bare state, but there is one problem,
** Checking where is connected is troublesome **
Basically, DHCP is used and there is no monitor, so it is troublesome to check the IP address whether it is a wired connection or a wireless connection.</description>
    </item>
    
    <item>
      <title>I tried sending Raspberry Pi data to GCP (free)</title>
      <link>https://japan2018.github.io/i-tried-sending-raspberry-pi-data-to-gcp-free-fc564/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/i-tried-sending-raspberry-pi-data-to-gcp-free-fc564/</guid>
      <description>#I sent the data of Raspberry Pi to GCP (free)  I wanted to create a mechanism to store Raspberry Pi data in MySQL and check it on the Web. For people who want to set up a server in VPS and exchange data.
*This article is intended to acquire and send temperature data on the Rasberry Pi.
Development environment  Windows10 Pro Powershell Windows Subsystem for Linux (Ubuntu)  About GCP Abbreviation for Google Cloud Platform, which is a cloud computing service provided by Google.</description>
    </item>
    
  </channel>
</rss>