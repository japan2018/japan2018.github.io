<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Chainer on Memo Tut</title>
    <link>https://memotut.com/tags/chainer/</link>
    <description>Recent content in  Chainer on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/chainer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why is cross entropy used for the objective function of classification problems?</title>
      <link>https://memotut.com/why-is-cross-entropy-used-for-the-objective-function-of-classification-problems-a476e/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/why-is-cross-entropy-used-for-the-objective-function-of-classification-problems-a476e/</guid>
      <description># What is a classification problem  The classification problem is to classify data into several categories and is one of the typical methods of machine learning.
Let&amp;rsquo;s take a purchasing site as an example. Predict whether a user will buy or not buy a new product based on the user&amp;rsquo;s purchasing information. Classification into two categories (classes) is called binary classification.
Classification predictions with more than two classes are called multiclass classifications.</description>
    </item>
    
    <item>
      <title>For the first time after breaking up, I realized that I liked Chainer&#39;s Linear.</title>
      <link>https://memotut.com/for-the-first-time-after-breaking-up-i-realized-that-i-liked-chainers-linear.-84d4e/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/for-the-first-time-after-breaking-up-i-realized-that-i-liked-chainers-linear.-84d4e/</guid>
      <description>2020/05/12 update  https://github.com/pfnet/pytorch-pfn-extras It became possible by importing this.
===
I was notified when the major update of Chainer was announced, and I wondered if it was time to come, but I decided to touch PyTorch as soon as possible for the future, and I made the model I had made with Chainer until now PyTorch I decided to implement it again.
And immediately, I hit an error&amp;hellip;
The relevant part is the following code.</description>
    </item>
    
    <item>
      <title>I tried rewriting the MNIST code of Chainer with PyTorch &#43; Ignite</title>
      <link>https://memotut.com/i-tried-rewriting-the-mnist-code-of-chainer-with-pytorch-ignite-35baf/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/i-tried-rewriting-the-mnist-code-of-chainer-with-pytorch-ignite-35baf/</guid>
      <description># TL;DR  The impression that I rewrote the MNIST code of Chainer to PyTorch was almost the same. The difference was in the layer above Updater in Chainer and the Ignite layer in PyTorch. Moreover, when chainer-pytorch-migration is actually used, Extensions used in Chainer can also be used in Ignite, and PyTorch+Ignite can be used quite like Chainer. I think that even people who have been using Chainer can naturally get used to PyTorch+Ignite.</description>
    </item>
    
    <item>
      <title>Few shot NODOGURO turning, I tried to automatically count Nodoguro</title>
      <link>https://memotut.com/few-shot-nodoguro-turning-i-tried-to-automatically-count-nodoguro-c3ece/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/few-shot-nodoguro-turning-i-tried-to-automatically-count-nodoguro-c3ece/</guid>
      <description>This article is from the 5th day of [Furukawa Laboratory Advent_calendar](https://qiita.com/advent-calendar/2019/flab).  #Introduction It is said that various frameworks such as PyTorch, Chainer, Keras, and TensorFlow have appeared, making it easy for anyone to use Deep Learning. For those of you who are actually using Deep Learning, it may seem easy just to move it. However, it is more difficult for people who do not use Python much than Deep Learning.</description>
    </item>
    
  </channel>
</rss>