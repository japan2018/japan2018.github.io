<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slack on Memo Tut</title>
    <link>https://memotut.com/tags/slack/</link>
    <description>Recent content in Slack on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/slack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] [Natural language processing] I tried to visualize the comments of each member in the Slack community</title>
      <link>https://memotut.com/dca470fbc/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/dca470fbc/</guid>
      <description>## About this article  In this article, I will introduce a method to visualize what each member says in the Slack community with Wordcloud.
The source code can be found here [https://github.com/sota0121/slack-msg-analysis) :octocat:
I would also like to read: [Natural language processing] I tried to visualize the topics raised this week in the Slack community
table of contents  Usage and output example Get message from Slack Pre-processing: table creation/cleaning/morphological analysis/normalization/stopword removal Pre-processing: Extracting important words (tf-idf) Visualization processing with Wordcloud Bonus  *I would like to summarize the preprocessing in another article in the future</description>
    </item>
    
    <item>
      <title>[Python] [Natural language processing] I tried to visualize the topics raised this week in the Slack community</title>
      <link>https://memotut.com/41630aa02/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/41630aa02/</guid>
      <description>## About this article  In this article, I will introduce a method of using Wordcloud to visualize what topics were raised within a certain period (here one week) of the Slack community.
The source code can be found here [https://github.com/sota0121/slack-msg-analysis) :octocat:
I would also like to read: [Natural language processing] I tried to visualize the comments of each member in the Slack community
table of contents  Usage and output example Get message from Slack Pre-processing: message mart table creation Pre-treatment: Cleaning Pre-processing: Morphological analysis (Janome) Pre-processing: Normalization Pre-processing: Stop word removal Pre-processing: Extract important words (tf-idf) Visualization processing with Wordcloud Bonus  *I would like to summarize the preprocessing in another article in the future</description>
    </item>
    
    <item>
      <title>[Python] Let Siri do the job of reading AWS bills posted by Slackbot</title>
      <link>https://memotut.com/d85fda007/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/d85fda007/</guid>
      <description>#Introduction  I&amp;rsquo;ve been using the iPhone for less than a decade and I noticed that Siri wasn&amp;rsquo;t working at all. Now that smart speakers are popular, I want my Siri to do more, so I decided to read the AWS bill posted by Slackbot.
From the results, it looks like this. When you ask for the price&amp;hellip; He read the content I posted to Slack. Then, I will introduce various ways to make it.</description>
    </item>
    
    <item>
      <title>[Python] I tried to make a document search slack command using Kendra announced at re:Invent 2019</title>
      <link>https://memotut.com/67a5b9023/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/67a5b9023/</guid>
      <description>Hello, this is the eighth day of [ABEJA Advent Calendar](https://qiita.com/advent-calendar/2019/abeja).  Introduction An interesting service was announced at re:Invent 2019 the other day. Yes, enterprise search service Amazon Kendra release. There are various communication tools in the company. However, all of them tend to be flow information and are not well organized, and the problem that information disparities are likely to occur is emerging. This is exactly Kendra&amp;rsquo;s task. When announced, this has no choice but to try!</description>
    </item>
    
    <item>
      <title>[Python] Employee 2vec: Extract member characteristics from Slack history and visualize organizational structure</title>
      <link>https://memotut.com/05e2c0fa4/</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/05e2c0fa4/</guid>
      <description>It is the 7th day of [ABEJA Advent Calendar](https://qiita.com/advent-calendar/2019/abeja).  #Introduction
Last time, I dropped a piece of information that couldn&amp;rsquo;t make a VIP channel in Slack, but it&amp;rsquo;s not good to think that ABEJA is just playing with VIP, so I decided to send it to Tech a little this time. In this article, I&amp;rsquo;ll try the following two stories. If it&amp;rsquo;s hard to understand, maybe you can jump to the bottom and see the graph.</description>
    </item>
    
    <item>
      <title>[Python] A story of making an anonymous channel with Slack from zero knowledge</title>
      <link>https://memotut.com/8561113fb/</link>
      <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/8561113fb/</guid>
      <description>#Introduction  A memorandum when I struggled to create an anonymous channel on Slack without any knowledge of AWS, Lambda, or Python.
#Trigger When I was thinking that I had to write something on Qiita after being invited by the Advent Calendar
 Talk about creating a VIP channel for in-house slack https://qiita.com/peisuke/items/80984db8b47cd8243019  After reading this article, this looks interesting! I would like to introduce it to Slack where I participate!</description>
    </item>
    
    <item>
      <title>[Python] Post to Slack in Python</title>
      <link>https://memotut.com/f8fa08331/</link>
      <pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/f8fa08331/</guid>
      <description>After I finished learning machine learning, I wanted to notify you of the result, I looked it up and made a memo.  Use Incoming Webhook. For details, see Manuals.
Register your Incoming Webhook with Slack  In the Slack app, press &amp;ldquo;Add an app or custom integration&amp;rdquo;. When the browser starts up, press &amp;ldquo;Build your own&amp;rdquo; in the upper right. Press &amp;ldquo;Make a custom integration&amp;rdquo;. Press “Incoming Webhook”. Select the channel you want to post to and create it.</description>
    </item>
    
  </channel>
</rss>