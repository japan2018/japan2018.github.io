<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Some Title</title>
    <link>https://japan2018.github.io/tags/docker/</link>
    <description>Recent content in Docker on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build a lightweight FastAPI development environment using Docker</title>
      <link>https://japan2018.github.io/build-a-lightweight-fastapi-development-environment-using-docker-fcd38/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/build-a-lightweight-fastapi-development-environment-using-docker-fcd38/</guid>
      <description>## Introduction  I often use FastAPI recently, and I wanted to quickly build it with Docker and dispose of it. As a memo, I&amp;rsquo;d like to leave a lightweight construction method.
Preparation  Environment that can use Docker and Docker Compose  $ docker --version Docker version 19.03.8, build afacb8b7f0  The file structure looks like this  . ├── Dockerfile ├── docker-compose.yml ├── main.py └── requirements.txt Source You can clone from here https://github.</description>
    </item>
    
    <item>
      <title>Released the Corona Candlestick Chart App for Hyogo Prefecture.</title>
      <link>https://japan2018.github.io/released-the-corona-candlestick-chart-app-for-hyogo-prefecture.-fdd23/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/released-the-corona-candlestick-chart-app-for-hyogo-prefecture.-fdd23/</guid>
      <description># Published service  https://covid19-candle-hyogo.ml The source code of GitHub is here
#Motivation The published daily graph of infected persons and the cumulative graph Those who have recovered and those who have died are not deducted I think it only gives the feeling that we are constantly expanding.
As I am What I would like to know is rather the “trend” Is it expanding, is it ending, or is it in a balanced state?</description>
    </item>
    
    <item>
      <title>Put Ubuntu in Raspi, put Docker on it, and control GPIO with python from container</title>
      <link>https://japan2018.github.io/put-ubuntu-in-raspi-put-docker-on-it-and-control-gpio-with-python-from-container-feda9/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/put-ubuntu-in-raspi-put-docker-on-it-and-control-gpio-with-python-from-container-feda9/</guid>
      <description>#Introduction  It became a confusing title, but it is this image #environment Development PC: Mac Mojave RaspBerry Pi4 Memory 4GB SD card 16GB
Write #Ubuntu 19.10 to SD https://ubuntu.com/download/raspberry-pi I downloaded the 64-bit version from and wrote it using balenaEtchar.
Install #docker on Ubuntu Enter ssh or something in Ubuntu
sudo apt-get install docker-ce You can install it with.
sudo usermod -aG docker ubuntu You can use docker without using sudo.</description>
    </item>
    
    <item>
      <title>[DynamoDB] [Docker] Build a development environment for DynamoDB and Django with docker-compose</title>
      <link>https://japan2018.github.io/dynamodb-docker-build-a-development-environment-for-dynamodb-and-django-with-docker-compose-fca2c/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/dynamodb-docker-build-a-development-environment-for-dynamodb-and-django-with-docker-compose-fca2c/</guid>
      <description># Build a development environment for DynamoDB and Django with docker-compose  Introduction DynamoDB is cheap and fast. Did you know that there is a Docker Image for developing such DynamoDB locally? We will inquire about an example of development environment construction using such Docker Image.
Environment The following image versions are used according to the production environment. Use dynamodb-admin for DynamoDB GUI operation. Node is used to build the environment together.</description>
    </item>
    
    <item>
      <title>[Introduction to Docker] I tried to summarize various findings of Docker obtained by studying (Windows/Python)</title>
      <link>https://japan2018.github.io/introduction-to-docker-i-tried-to-summarize-various-findings-of-docker-obtained-by-studying-windows-python-f7eea/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/introduction-to-docker-i-tried-to-summarize-various-findings-of-docker-obtained-by-studying-windows-python-f7eea/</guid>
      <description>There was a person in charge of specialized infrastructure related things in the company, and he was kind to the environment, but it would be bad if I had to study Docker around myself as soon as possible. I&#39;ve finally been introduced to Docker recently, so I&#39;ll try to put together and try what I have learned as a memorandum.  Since I have been working on unfamiliar work such as infrastructure around my career, please forgive me for things that are rough (shallow) in terms of knowledge.</description>
    </item>
    
    <item>
      <title>Until the API made with Flask&#43;MySQL is converted to Docker</title>
      <link>https://japan2018.github.io/until-the-api-made-with-flask-mysql-is-converted-to-docker-fe666/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/until-the-api-made-with-flask-mysql-is-converted-to-docker-fe666/</guid>
      <description>## this is?  I want to make an API. I want to make it with Flask+MySQL. And I want to make it Docker. Make a note of this procedure. I don&amp;rsquo;t really know where to use Docker, so concentrate on this.
things to do  Create a simple API with Flask alone. Convert 2.1 to Docker. Prepare MySQL. Enable the integration of Flask and MySQL with docker-compose.  1. Create a simple API with Flask alone.</description>
    </item>
    
  </channel>
</rss>