<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tesseract on Some Title</title>
    <link>https://japan2018.github.io/tags/tesseract/</link>
    <description>Recent content in tesseract on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/tesseract/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Recognize characters from images with OpenCV and pyocr</title>
      <link>https://japan2018.github.io/python-recognize-characters-from-images-with-opencv-and-pyocr-f9a70/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-recognize-characters-from-images-with-opencv-and-pyocr-f9a70/</guid>
      <description>#Introduction  When I was looking for articles using Selenium, I found an article about automated sushi batting. The method basically looks like the following ・Continue entering all keys after starting the game ・After starting the game, take a screenshot and enter the character string obtained by OCR *Sushi Uchi cannot get the character string directly because the game screen is drawn on the Canvas element.
This time I tried simple image processing using OCR part and OpenCV as pre-processing #Advance preparation</description>
    </item>
    
  </channel>
</rss>