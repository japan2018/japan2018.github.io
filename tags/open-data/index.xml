<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> open data on Memo Tut</title>
    <link>https://memotut.com/tags/open-data/</link>
    <description>Recent content in  open data on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/open-data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] COVID-19 Hokkaido Data Edition (2) Toward Open Data &#43; Automatic Update</title>
      <link>https://memotut.com/covid-19-hokkaido-data-edition-2-toward-open-data-automatic-update-8f076/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/covid-19-hokkaido-data-edition-2-toward-open-data-automatic-update-8f076/</guid>
      <description>## Table of contents  COVID-19 Hokkaido data edition (1) Initial data creation by scraping etc. COVID-19 Hokkaido Data Edition (2) To open data + automatic update ←This article! COVID-19 Hokkaido data edition ③ Fully automated
![Screenshot 2020-03-10 17.37.10.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/73197/cfee968c-cffb-cc29-67c0-(76b076fa30cd.png)
In ①, we have summarized V0 in the above figure, but this article will summarize the use of external APIs such as open data portal.
Issues with V0 In V0, data acquisition relied on (1) scraping from the road website and (2) static CSV files provided by Sapporo City.</description>
    </item>
    
    <item>
      <title>[Python] Analyzing the amount of pollen dispersal, the vegetation of Sugi and the effect of wind from open data (Visualization)</title>
      <link>https://memotut.com/analyzing-the-amount-of-pollen-dispersal-the-vegetation-of-sugi-and-the-effect-of-wind-from-open-data-visualization-e9fa0/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/analyzing-the-amount-of-pollen-dispersal-the-vegetation-of-sugi-and-the-effect-of-wind-from-open-data-visualization-e9fa0/</guid>
      <description>#Introduction  This is a sequel to the previous &amp;ldquo;Visualizing the amount of pollen dispersal and the vegetation of Sugi and the effect of wind from open data (pretreatment)&amp;rdquo;. The previous article is from the link below. https://qiita.com/TakuTaku36/items/40cb590b0ae0c6340f8c This time, we will visualize and analyze winds that may be affecting pollen dispersal amounts, sugi vegetation, and prevalence of pollinosis by prefecture at each observation point in Japan.
#Wind visualization There is a little time left from the previous preprocessing of the data before the compilation of this visualization, and during that time it has been slightly improved so that it can be handled easily by merging the data, so it is not exactly the same, but it is not bad.</description>
    </item>
    
    <item>
      <title>[Python] Analyzing pollen dispersal amount, vegetation of Sugi and influence of wind from open data (pretreatment)</title>
      <link>https://memotut.com/analyzing-pollen-dispersal-amount-vegetation-of-sugi-and-influence-of-wind-from-open-data-pretreatment-40cb5/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/analyzing-pollen-dispersal-amount-vegetation-of-sugi-and-influence-of-wind-from-open-data-pretreatment-40cb5/</guid>
      <description>#Introduction  TechTrain&amp;rsquo;s Advent Calendar (https://qiita.com/advent-calendar/2019/techtrain) I&amp;rsquo;m in charge of the 11th day, and I&amp;rsquo;m a first-year college student learning Python for two and a half months. I will summarize what I analyzed lightly.
Content Looking at the hay fever prevalence data in each prefecture, it was found that the hay fever prevalence was high in a wide area in the Kanto region, including Tokyo, where there is no image of sugi growing so much.</description>
    </item>
    
    <item>
      <title>[Python] Predict the value of the water level gauge by machine learning using open data of data city Sabae</title>
      <link>https://memotut.com/predict-the-value-of-the-water-level-gauge-by-machine-learning-using-open-data-of-data-city-sabae-fe2e0/</link>
      <pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/predict-the-value-of-the-water-level-gauge-by-machine-learning-using-open-data-of-data-city-sabae-fe2e0/</guid>
      <description>#Introduction  When I was looking for something good as an example of using open data, I found that the water level data was published on the site of Data City Sabae, so I tried machine learning using it. It was
http://data.city.sabae.lg.jp/top_page/
Download data There is the following notation in the &amp;ldquo;Disaster prevention&amp;rdquo; group on the &amp;ldquo;Open data&amp;rdquo; page on the above site.
Water level data (Sabae City, Fukui Prefecture) Nontegawa Drainage Pump Station [CSV] It is the data of the water level gauge in Sabae city.</description>
    </item>
    
  </channel>
</rss>