<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Python3 on Some Title</title>
    <link>https://japan2018.github.io/tags/python3/</link>
    <description>Recent content in  Python3 on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/python3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>✨ Easy with Python ☆ Estimated elapsed time after death ✨</title>
      <link>https://japan2018.github.io/easy-with-python-estimated-elapsed-time-after-death-f89d4/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/easy-with-python-estimated-elapsed-time-after-death-f89d4/</guid>
      <description># What if there was a corpse in front of you?  (quoted;DetectiveConan&amp;quot;SweetColdCourier&amp;rdquo;) When Conan finds his body, he thinks about the post-mortem time at the very beginning, right? If you know the estimated time of death, you can narrow down the suspects greatly (^o^)/ Therefore, this time we will introduce how to obtain more details about the elapsed time after death!
#Example There was a man&amp;rsquo;s body in a refrigerated car set at room temperature of 16°C.</description>
    </item>
    
    <item>
      <title>Leet Code Day 35 160. Intersection of Two Linked Lists</title>
      <link>https://japan2018.github.io/leet-code-day-35-160.-intersection-of-two-linked-lists-f9c01/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/leet-code-day-35-160.-intersection-of-two-linked-lists-f9c01/</guid>
      <description>#Overview  It seems that a coding test is conducted in an engineer&amp;rsquo;s interview overseas, and in many cases, the main thing is to implement a specific function or class according to the subject.
As a countermeasure, it seems that the site called Leet Code will be implemented.
A site that trains the algorithm power to withstand the coding tests that are being conducted in the early days.
I think it is better to have at least as much algorithmic power as an impatient person, so I think that I will occasionally solve the problem and write down the method I thought at that time in a memo.</description>
    </item>
    
    <item>
      <title>Leet Code Day 33 1. Two Sum Starting from Zero</title>
      <link>https://japan2018.github.io/leet-code-day-33-1.-two-sum-starting-from-zero-fed16/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/leet-code-day-33-1.-two-sum-starting-from-zero-fed16/</guid>
      <description>#Overview  It seems that a coding test is conducted in an engineer&amp;rsquo;s interview overseas, and in many cases, the main thing is to implement a specific function or class according to the subject.
As a countermeasure, it seems that the site called Leet Code will be implemented.
A site that trains the algorithm power to withstand the coding tests that are being conducted in the early days.
I think it is better to have at least as much algorithmic power as an impatient person, so I think that I will occasionally solve the problem and write down the method I thought at that time in a memo.</description>
    </item>
    
    <item>
      <title>[Python] Practical Beautiful Soup ~Scraping the triple odds table on the official website for boat racing~</title>
      <link>https://japan2018.github.io/python-practical-beautiful-soup-~scraping-the-triple-odds-table-on-the-official-website-for-boat-racing~-f8d80/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-practical-beautiful-soup-~scraping-the-triple-odds-table-on-the-official-website-for-boat-racing~-f8d80/</guid>
      <description># Purpose  Data collection is a pain. I thought that I would like to analyze boat racing in the future, so as a practice of data collection Odds table of official boat racing site.
Overview  I can only think of a convenient language = python for scraping, so I use python3.7. Python 3.7 is called beatutiful soup ~~ It seems a little erotic ~~ It seems that the library with the name is convenient for scraping By using the beautifulsoup css selector, you can specify the location of the table without deciphering the html one by one!</description>
    </item>
    
    <item>
      <title>Leet Code Day 19 121. Best Time to Buy and Sell Stock</title>
      <link>https://japan2018.github.io/leet-code-day-19-121.-best-time-to-buy-and-sell-stock-f89c2/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/leet-code-day-19-121.-best-time-to-buy-and-sell-stock-f89c2/</guid>
      <description>#Overview  It seems that a coding test is conducted in an engineer&amp;rsquo;s interview overseas, and in many cases, the main thing is to implement a specific function or class according to the subject.
As a countermeasure, it seems that the site called Leet Code will be implemented.
A site that trains the algorithm power to withstand the coding tests that are being conducted in the early days.
I think it is better to have at least as much algorithmic power as an impatient person, so I think that I will occasionally solve the problem and write down the method I thought at that time in a memo.</description>
    </item>
    
    <item>
      <title>Leet Code Day 17 169. Majority Element starting from scratch</title>
      <link>https://japan2018.github.io/leet-code-day-17-169.-majority-element-starting-from-scratch-fac33/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/leet-code-day-17-169.-majority-element-starting-from-scratch-fac33/</guid>
      <description>#Overview  It seems that a coding test is conducted in an engineer&amp;rsquo;s interview overseas, and in many cases, the main thing is to implement a specific function or class according to the subject.
As a countermeasure, it seems that the site called Leet Code will be implemented.
A site that trains the algorithm power to withstand the coding tests that are being conducted in the early days.
I think it is better to have at least as much algorithmic power as an impatient person, so I think that I will occasionally solve the problem and write down the method I thought at that time in a memo.</description>
    </item>
    
    <item>
      <title>Leet Code Day 14 “136. Single Number” Starting from Zero</title>
      <link>https://japan2018.github.io/leet-code-day-14-136.-single-number-starting-from-zero-fd12c/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/leet-code-day-14-136.-single-number-starting-from-zero-fd12c/</guid>
      <description>#Overview  It seems that a coding test is conducted in an engineer&amp;rsquo;s interview overseas, and in many cases, the main thing is to implement a specific function or class according to the subject.
As a countermeasure, it seems that the site called Leet Code will be implemented.
A site that trains the algorithm power to withstand the coding tests that are being conducted in the early days.
I think it is better to have at least as much algorithmic power as an impatient person, so I think that I will occasionally solve the problem and write down the method I thought at that time in a memo.</description>
    </item>
    
    <item>
      <title>Let&#39;s reproduce the math teaching tool Jamaica ❗️ vol.01 Memorandum for displaying images in Python</title>
      <link>https://japan2018.github.io/lets-reproduce-the-math-teaching-tool-jamaica-%EF%B8%8F-vol.01-memorandum-for-displaying-images-in-python-fd0b4/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/lets-reproduce-the-math-teaching-tool-jamaica-%EF%B8%8F-vol.01-memorandum-for-displaying-images-in-python-fd0b4/</guid>
      <description>#Introduction  This series is about Math teaching tool Jamaica It is a record struggling to achieve the following goals.
▶︎ 1. *** &amp;ldquo;Jamaica&amp;rdquo; game can be run by a program that uses image display. *** 2. *** Create a program that searches for and presents the existence of solutions and their contents for any combination of dice in Jamaica. ***
Q1. What is arithmetic tool &amp;quot;Jamaica&amp;quot;? A1. &amp;ldquo;Jamaica / Jamaica&amp;rdquo; is sold as a mathematics teaching tool based on &amp;ldquo;number play&amp;quot; using dice.</description>
    </item>
    
    <item>
      <title>[Python] If you create a file with the same name as the imported module, an AttributeError will occur</title>
      <link>https://japan2018.github.io/python-if-you-create-a-file-with-the-same-name-as-the-imported-module-an-attributeerror-will-occur-fe18e/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-if-you-create-a-file-with-the-same-name-as-the-imported-module-an-attributeerror-will-occur-fe18e/</guid>
      <description>I just wanted to check the operation of the library, but I fell in love with it unexpectedly.  For example, suppose you create a file called json.py to try out the json module.
import json obj = { &amp;#34;id&amp;#34; :1, &amp;#34;name&amp;#34; :&amp;#34;hoge&amp;#34;, } str = json.dumps(obj) print(str) The code looks fine, but&amp;hellip;
This gives an error when run.
$python3 json.py ... AttributeError: module&amp;#39;json&amp;#39; has no attribute&amp;#39;dumps&amp;#39; I have been told that the json module does not have dumps.</description>
    </item>
    
    <item>
      <title>Django URL settings</title>
      <link>https://japan2018.github.io/django-url-settings-fb9c3/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/django-url-settings-fb9c3/</guid>
      <description>#Introduction  Here, we will explain the settings related to the URL of django.
Project urls.py settings First, edit urls.py under the project directory as follows.
from django.contrib import admin from django.urls import path, include urlpatterns = [ path(&#39;admin/&#39;, admin.site.urls), path(&#39;&#39;, include(&#39;application name.urls&#39;)), ] The place where it becomes admin/ shows the URL to the management screen. For other pages, we use include in the sense that it is described in urls.</description>
    </item>
    
    <item>
      <title>Leet Code Day 6 “1342.Number of Steps to Reduce a Number to Zero”</title>
      <link>https://japan2018.github.io/leet-code-day-6-1342.number-of-steps-to-reduce-a-number-to-zero-fb274/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/leet-code-day-6-1342.number-of-steps-to-reduce-a-number-to-zero-fb274/</guid>
      <description>#Overview  It seems that a coding test is conducted in an engineer&amp;rsquo;s interview overseas, and in many cases, the main thing is to implement a specific function or class according to the subject.
As a countermeasure, it seems that the site called Leet Code will be implemented.
A site that trains the algorithm power to withstand the coding tests that are being conducted in the early days.
I think it is better to have at least as much algorithmic power as an impatient person, so I think that I will occasionally solve the problem and write down the method I thought at that time in a memo.</description>
    </item>
    
    <item>
      <title>Use the company name recognition dictionary JCLdic for MeCab</title>
      <link>https://japan2018.github.io/use-the-company-name-recognition-dictionary-jcldic-for-mecab-fca1f/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/use-the-company-name-recognition-dictionary-jcldic-for-mecab-fca1f/</guid>
      <description># About this article  This article introduces how to use the company name dictionary (JCLdic).
Dictionary introduction  &amp;ldquo;JCLdic&amp;rdquo; public page  JCLdic contains over 8 million company names and their aliases. It is a dictionary created to solve the problem that the coverage of company names is low in conventional dictionaries and it is difficult to recognize due to fluctuations in notation.
#Getting a dictionary
 JCLdic Download Page  Download JC_slim as an example and download MeCab Dic.</description>
    </item>
    
    <item>
      <title>Command for current directory Python</title>
      <link>https://japan2018.github.io/command-for-current-directory-python-fa229/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/command-for-current-directory-python-fa229/</guid>
      <description>#Command for current directory  Since all os modules are used
 import os  Strike first.
  Get pathname of current directory
 path = os.getcwd() print(path)    Display folders and files in the current directory
 ls = os.listdir(os.getcwd()) print(ls)    Move directory
 os.chdir(&amp;quot;Desctop&amp;quot;) # This is all you need to move curdir = os.getcwd() print(curdir)    Get the directory name of the current directory</description>
    </item>
    
    <item>
      <title>python setup.py test code that uses multiprocess</title>
      <link>https://japan2018.github.io/python-setup.py-test-code-that-uses-multiprocess-f8229/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-setup.py-test-code-that-uses-multiprocess-f8229/</guid>
      <description># wrap up   Running unittest including multiprocess module in setup.py results in infinite loop Apparently it is a specification of the multiprocess module Temporarily rewrite &amp;ldquo;__main__&amp;rdquo; as a workaround  Premise In python it uses the &amp;ldquo;multiprocess&amp;rdquo; module to run functions in multiprocess.
The formula is easy to understand how to use and sample code. https://docs.python.org/ja/3/library/multiprocessing.html
Now look at the following code
from multiprocessing import Pool def f(x): return x*x def main(): with Pool(5) as p: print(p.</description>
    </item>
    
    <item>
      <title>How to use python multiprocessing (cont. 3) apply_async in a class that has Pool as a member</title>
      <link>https://japan2018.github.io/how-to-use-python-multiprocessing-cont.-3-apply_async-in-a-class-that-has-pool-as-a-member-ff80f/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/how-to-use-python-multiprocessing-cont.-3-apply_async-in-a-class-that-has-pool-as-a-member-ff80f/</guid>
      <description>### Purpose  I have been studying since yesterday, but I feel that I have finally come close to the shape I want to use, so I will write it down again here.
 For input that comes asynchronously, I want to move the processing without blocking in a separate process I want to catch the end properly  I wanted to realize that. I made a note yesterday, but it feels like I&amp;rsquo;ve settled down here.</description>
    </item>
    
    <item>
      <title>No module named&#39;_ctypes&#39; occurs when installing pipenv</title>
      <link>https://japan2018.github.io/no-module-named_ctypes-occurs-when-installing-pipenv-f8a1a/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/no-module-named_ctypes-occurs-when-installing-pipenv-f8a1a/</guid>
      <description>## 環境  OS: Amazon Linux 2 Python: 3.8.1
事象 pyenvでpython3.8.1をinstall後、pip install pipenvを実行すると以下のエラーが発生し、installできない。
 ERROR: Command errored out with exit status 1: command: /root/.pyenv/versions/3.8.1/bin/python3.8 -c &#39;import sys, setuptools, tokenize; sys.argv[0] = &#39;&amp;quot;&#39;&amp;quot;&#39;/tmp/pip-install-shwfwhga/distlib/setup.py&#39;&amp;quot;&#39;&amp;quot;&#39;; __file__=&#39;&amp;quot;&#39;&amp;quot;&#39;/tmp/pip-install-shwfwhga/distlib/setup.py&#39;&amp;quot;&#39;&amp;quot;&#39;;f=getattr(tokenize, &#39;&amp;quot;&#39;&amp;quot;&#39;open&#39;&amp;quot;&#39;&amp;quot;&#39;, open)(__file__);code=f.read().replace(&#39;&amp;quot;&#39;&amp;quot;&#39;\r\n&#39;&amp;quot;&#39;&amp;quot;&#39;, &#39;&amp;quot;&#39;&amp;quot;&#39;\n&#39;&amp;quot;&#39;&amp;quot;&#39;);f.close();exec(compile(code, __file__, &#39;&amp;quot;&#39;&amp;quot;&#39;exec&#39;&amp;quot;&#39;&amp;quot;&#39;))&#39; egg_info --egg-base pip-egg-info cwd: /tmp/pip-install-shwfwhga/distlib/ Complete output (11 lines): Traceback (most recent call last): File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt; File &amp;quot;/root/.pyenv/versions/3.8.1/lib/python3.8/site-packages/setuptools/__init__.py&amp;quot;, line 20, in &amp;lt;module&amp;gt; from setuptools.dist import Distribution, Feature File &amp;quot;/root/.</description>
    </item>
    
    <item>
      <title>Move the turtle to the place where the mouse is clicked with Python turtle</title>
      <link>https://japan2018.github.io/move-the-turtle-to-the-place-where-the-mouse-is-clicked-with-python-turtle-fddcf/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/move-the-turtle-to-the-place-where-the-mouse-is-clicked-with-python-turtle-fddcf/</guid>
      <description>Move the turtle to the place where the mouse is clicked with #Python turtle  Execution image Sample program import turtle kame = turtle.Turtle(&amp;#34;turtle&amp;#34;) def moveKame(x, y): kame.goto(x, y) kame.screen.onclick(moveKame) turtle.done() Explanation # load the turtle module import turtle Generate and store a Turtle in the turtle module in a variable named # kame kame = turtle.Turtle(&amp;#34;turtle&amp;#34;) Define a function named #moveKame #def means to generate a function # moveKame can be any name # x, y contains the numerical value of the coordinates clicked with the mouse def moveKame(x, y): # Move the turtle kame.</description>
    </item>
    
    <item>
      <title>Delete tweets for specified period</title>
      <link>https://japan2018.github.io/delete-tweets-for-specified-period-fe277/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/delete-tweets-for-specified-period-fe277/</guid>
      <description>## I want to say that there was no black history  There are already various tools in the world, According to the specifications of Twitter, only the latest 3200 can be deleted, There is a charge for mass deletion. Very troubled.
There are over 100,000 tweets like garbage that have accumulated since 2010.
There is also a source that erases all tweets in Qiita if you search for it. But everything is in trouble.</description>
    </item>
    
    <item>
      <title>Setting up Digest authentication using Python @Lambda</title>
      <link>https://japan2018.github.io/setting-up-digest-authentication-using-python-lambda-fe83c/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/setting-up-digest-authentication-using-python-lambda-fe83c/</guid>
      <description>#Introduction  There was almost no information when I searched for Digest authentication, so I wrote it as a sequel to Basic authentication setting @ Lambda using Python. I have barely touched Digest authentication itself, and I also learned the mechanism.
#Code
import os import ctypes import json import base64 import time import hashlib import copy from Crypto.Cipher import AES accounts = [ { &amp;#34;user&amp;#34;: &amp;#34;user1&amp;#34;, &amp;#34;pass&amp;#34;: &amp;#34;pass1&amp;#34; }, { &amp;#34;user&amp;#34;: &amp;#34;user2&amp;#34;, &amp;#34;pass&amp;#34;: &amp;#34;pass2&amp;#34; } ] realm = &amp;#34;sample@test.</description>
    </item>
    
    <item>
      <title>How to remove duplicate element in list in Python 3</title>
      <link>https://japan2018.github.io/how-to-remove-duplicate-element-in-list-in-python-3-fdfef/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/how-to-remove-duplicate-element-in-list-in-python-3-fdfef/</guid>
      <description>### Remove duplicate elements from the list  The reason I wanted to write this list was that when I created a list with no duplicate elements, I used remove() to remove the elements. I used to think that if you use remove(), all the specified values will be deleted.
l = [1, 2, 3, 4, 1] l.remove(1) print(l) #[2, 3, 4, 1] In this way, the specified value that appears at the very beginning can be deleted.</description>
    </item>
    
    <item>
      <title>[Pandas 1.0.1 Memorial] Fierce battle with Cookbook</title>
      <link>https://japan2018.github.io/pandas-1.0.1-memorial-fierce-battle-with-cookbook-faf24/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/pandas-1.0.1-memorial-fierce-battle-with-cookbook-faf24/</guid>
      <description>#Background   Every time there is a Google search, it is bloody and not flesh due to temporary understanding. Fragmental knowledge alone is not enough to apply when it is difficult to apply. In order to overcome the weakened memory, it is necessary to move it, understand it, and explain it to the brain. I would like to carry out a dictum from the predecessors, &amp;ldquo;Please read the official manual&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Create a clean DB for testing with FastAPI and perform unit test of API with pytest</title>
      <link>https://japan2018.github.io/create-a-clean-db-for-testing-with-fastapi-and-perform-unit-test-of-api-with-pytest-ff9c8/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/create-a-clean-db-for-testing-with-fastapi-and-perform-unit-test-of-api-with-pytest-ff9c8/</guid>
      <description>## things to do   implementation of a simple CRUD application using sqlite3 with FastAPI [Create a DB for each test case and perform unit test of API with pytest without affecting other test cases or production DB](#CreateaDBforeachtestcaseandcreateanothertestcase(UnittestofAPIisperformedwithpytestwithoutaffectingtheproductionDB.)  1. Implementing a simple CRUD application using sqlite3 with FastAPI CRUD application Create a CRUD app for user account. Since the test method is mainly introduced, only the following simple functions will be implemented.</description>
    </item>
    
    <item>
      <title>[Python] Expand escape sequences in here-docs</title>
      <link>https://japan2018.github.io/python-expand-escape-sequences-in-here-docs-f8218/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-expand-escape-sequences-in-here-docs-f8218/</guid>
      <description>I&#39;m addicted to it  Even if the escape sequence (\) is written in the here-document as it is, it is not expanded as an escape sequence.
It can be expanded by writing two consecutive characters like \\ or using a raw string.
&amp;gt;&amp;gt;&amp;gt; import json &amp;gt;&amp;gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt; json_dict1 = json.loads(&amp;#39;&amp;#39;&amp;#39; ... { ... &amp;#34;id&amp;#34;: 1, ... &amp;#34;name&amp;#34;: &amp;#34;hoge&amp;#34;, ... &amp;#34;discription&amp;#34;: &amp;#34;Houji \&amp;#34;Hojo \ &amp;#34;Hoge&amp;#34; ...} ...&amp;#39;&amp;#39;&amp;#39;) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 7, in &amp;lt;module&amp;gt; File &amp;#34;C:\Program Files\WindowsApps\PythonSoftwareFoundation.</description>
    </item>
    
    <item>
      <title>Flask introduction ~ Blueprint application note</title>
      <link>https://japan2018.github.io/flask-introduction-~-blueprint-application-note-fb7d1/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/flask-introduction-~-blueprint-application-note-fb7d1/</guid>
      <description>Let&#39;s try the title as easily as possible.  Blueprint allows you to implement the functionality of your application in pieces. Blueprint is officially recommended as a way to organize bloated projects.
Install Flask $ sudo pip3 install flask Directory structure $ cd ~/workspace/sample-flask/ $ls server.py from flask import Flask app = Flask(__name__) @app.route(&amp;#39;/&amp;#39;) def func_1(): return&amp;#39;Hello world&amp;#39; @app.route(&amp;#39;/test&amp;#39;) def func_2(): return&amp;#39;Test&amp;#39; if __name__ ==&amp;#39;__main__&amp;#39;: app.run(host=&amp;#39;0.0.0.0&amp;#39;, port=80, debug=True) Execution command $python3 server.</description>
    </item>
    
    <item>
      <title>pandas series part 1</title>
      <link>https://japan2018.github.io/pandas-series-part-1-fc2b7/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/pandas-series-part-1-fc2b7/</guid>
      <description>Series is a one-dimensional data structure.  import pandas as pd series = pd.Series([3, 6, 9]) print(series) Execution result of ```:1 0 3 1 6 2 9 dtype: int64
 There is an index in the leftmost column. To change the index, write as follows ```py:2 import pandas as pd names = [&amp;quot;Tanaka&amp;quot;, &amp;quot;Yamada&amp;quot;, &amp;quot;Takahashi&amp;quot;] series1 = pd.Series(names) series2 = pd.Series(names, index=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]) print(series1) print(series2) Execution result of ```:2 0 Tanaka 1 Yamada 2 Takahashi dtype: object a Tanaka b Yamada c Takahashi dtype: object</description>
    </item>
    
    <item>
      <title>Python description of a parent killed literally</title>
      <link>https://japan2018.github.io/python-description-of-a-parent-killed-literally-fe71b/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-description-of-a-parent-killed-literally-fe71b/</guid>
      <description>@Raclett3&#39;s  Python programming whose parents were killed by literals of strings, numbers and truth values I think it&amp;rsquo;s very interesting :raised_hands:, but at the same time I couldn&amp;rsquo;t understand what was happening, so I looked into it. It&amp;rsquo;s a commentary or my own study.
I mainly write &amp;ldquo;small numerical values&amp;rdquo;. If you make a mistake, throw Masakari.
#0
int() # 0 This is as per @Raclett3&amp;rsquo;s link.
 or return 0 if no arguments are given</description>
    </item>
    
    <item>
      <title>I read PEP-593 (Flexible function and variable annotations)</title>
      <link>https://japan2018.github.io/i-read-pep-593-flexible-function-and-variable-annotations-fa103/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/i-read-pep-593-flexible-function-and-variable-annotations-fa103/</guid>
      <description>In a certain discussion flow, I decided to read [PEP-593 (Flexible function and variable annotations)](https://www.python.org/dev/peps/pep-0593/), so I wrote down my understanding. Leave it in.  Overview  PEP-3107 (Function Annotations) introduced annotations into the Python syntax. At that time, the type hints, DB query mapping, and RPS marshalling information were mentioned as the uses of annotations. PEP-484 (Type Hints) introduced a method to implement type hints using annotation notation. It can be said that this is the main usage of annotations.</description>
    </item>
    
    <item>
      <title>[Python3 Getting Started Day 21] Chapter 10 System (10.1 ~ 10.5)</title>
      <link>https://japan2018.github.io/python3-getting-started-day-21-chapter-10-system-10.1-~-10.5-fb945/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python3-getting-started-day-21-chapter-10-system-10.1-~-10.5-fb945/</guid>
      <description>#10.1 file  ##10.1.1 Create by open()
 The open() function not only opens a file, but creates a new file when you request a file that does not exist.  &amp;gt;&amp;gt;&amp;gt; fout=open(&amp;#34;oops.txt&amp;#34;,&amp;#34;wt&amp;#34;) &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;Oops,I created a file.&amp;#34;,file=fout) &amp;gt;&amp;gt;&amp;gt; fout.close() ##10.1.2 Check for existence of file by exists()
&amp;gt;&amp;gt;&amp;gt; import os &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;oops.txt&amp;#34;) True &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;./oops.txt&amp;#34;) True &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;aaa.txt&amp;#34;) False &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;.&amp;#34;) True &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;..&amp;#34;) True ##10.1.3 Checking file type with isfile()</description>
    </item>
    
    <item>
      <title>[Introduction to Docker] I tried to summarize various findings of Docker obtained by studying (Windows/Python)</title>
      <link>https://japan2018.github.io/introduction-to-docker-i-tried-to-summarize-various-findings-of-docker-obtained-by-studying-windows-python-f7eea/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/introduction-to-docker-i-tried-to-summarize-various-findings-of-docker-obtained-by-studying-windows-python-f7eea/</guid>
      <description>There was a person in charge of specialized infrastructure related things in the company, and he was kind to the environment, but it would be bad if I had to study Docker around myself as soon as possible. I&#39;ve finally been introduced to Docker recently, so I&#39;ll try to put together and try what I have learned as a memorandum.  Since I have been working on unfamiliar work such as infrastructure around my career, please forgive me for things that are rough (shallow) in terms of knowledge.</description>
    </item>
    
    <item>
      <title>python parallel/asynchronous execution memorandum</title>
      <link>https://japan2018.github.io/python-parallel-asynchronous-execution-memorandum-f8572/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-parallel-asynchronous-execution-memorandum-f8572/</guid>
      <description>#  A lot of Python asynchronous execution material was similar (official translation/re-editing?). It&amp;rsquo;s tough for Ojisan, who has become hard-headed, so I searched for examples and looked at sites in multiple languages, and after trial and error I finally moved, so I just summarized the liver.
Overview The examples are all patterns of external command execution on Windows Almost no commentary.
Check by PID Easy and nice. This is what Ojisan came up with.</description>
    </item>
    
    <item>
      <title>Qiita API Oauth with Django</title>
      <link>https://japan2018.github.io/qiita-api-oauth-with-django-f8279/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/qiita-api-oauth-with-django-f8279/</guid>
      <description>#Introduction  There is a convenient API called QiitaAPI for handling Qiita. https://qiita.com/api/v2/docs
Here is a sample to try it out with Django.
Only Oauth is dealt with in this article (other than that, it&amp;rsquo;s just a request)
Register the application from the following URL. https://qiita.com/settings/applications
You will get a Client ID and a Client Secret.
Around authentication ##GET /api/v2/oauth/authorize
Display the authorization screen for the user. If the user authorizes, code is added to the Callback URL specified in the application registration above.</description>
    </item>
    
    <item>
      <title>GET/POST communication with Flask (and for CORS support)</title>
      <link>https://japan2018.github.io/get-post-communication-with-flask-and-for-cors-support-fa72c/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/get-post-communication-with-flask-and-for-cors-support-fa72c/</guid>
      <description># Overview  Since the content of POST communication in Flask was ambiguous, both GET/POST communication are summarized here. ▽ There are &amp;ldquo;Communication in form&amp;rdquo;/&amp;ldquo;Communication in Json format&amp;rdquo; as contents. When you search for &amp;ldquo;Flask POST&amp;rdquo;, the information is messed up. By the way, it is Python 3.7.
#GET communication
from flask import Flask, request, jsonfy app = Flask(__name__) @app.route(&amp;#34;/&amp;#34;, methods=[&amp;#34;POST&amp;#34;]) def test(): data = request.args.get(&amp;#39;hoge&amp;#39;, ``) # Get value of hoge=value return data # Return as it is for sample POST communication Communication in Json format from flask import Flask, request, jsonfy import json app = Flask(__name__) @app.</description>
    </item>
    
    <item>
      <title>Create a LINEBot with Django</title>
      <link>https://japan2018.github.io/create-a-linebot-with-django-f9aa5/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/create-a-linebot-with-django-f9aa5/</guid>
      <description>#Introduction  I summarized the article about using LINEBot with Django because it was a little researched and it was old.
For the time being, I will create an Omukai Bot that returns the text sent as an introduction to LINE Bot.
Here article uses SDK, but I&amp;rsquo;m a Python beginner ~~ I can&amp;rsquo;t even throw an HTTP request with Python ~~ I want to do it.
I&amp;rsquo;m a Django beginner with less than a week of Django history.</description>
    </item>
    
    <item>
      <title>Python memorandum-points of personal interest-</title>
      <link>https://japan2018.github.io/python-memorandum-points-of-personal-interest-fdb0a/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-memorandum-points-of-personal-interest-fdb0a/</guid>
      <description>#Introduction  I was at a loss because I had a lot of use of Python 1, and I am currently learning with the goal of passing the &amp;ldquo;Python 3 Engineer Certification Basic Exam 2&amp;rdquo; @daikikatsuragawa is. In this article, I will introduce the points of personal interest as a reminder through learning Python. We will update and edit it at will. Please note.
Personally interested Command to terminate the interpreter quit() Command to exit the activated state deactivate Power calculation 3 ** 2 Multibyte characters (double-byte characters) can be used as variables However, it is not recommended.</description>
    </item>
    
    <item>
      <title>[Model construction] Using the data set of Reuters communication, create a model (MLP) that classifies news into topics with keras (TensorFlow 2 system)</title>
      <link>https://japan2018.github.io/model-construction-using-the-data-set-of-reuters-communication-create-a-model-mlp-that-classifies-news-into-topics-with-keras-tensorflow-2-system-ff9e0/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/model-construction-using-the-data-set-of-reuters-communication-create-a-model-mlp-that-classifies-news-into-topics-with-keras-tensorflow-2-system-ff9e0/</guid>
      <description>## Last pre-processing!  This article is a sequel to [Pre-processing]. [Pre-processing] Creating a model (MLP) for classifying news into topics using Reuters communication data set (TensorFlow 2 series)
Please refer to the pre-processing section for the operating environment.
Model learning Create a model using the preprocessed news article text x_train and the news label y_train.
This time, we will use a two-layer MLP (Multilayer Perceptron) as a simple model.</description>
    </item>
    
    <item>
      <title>Setting when introducing MongoDB with python</title>
      <link>https://japan2018.github.io/setting-when-introducing-mongodb-with-python-fe050/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/setting-when-introducing-mongodb-with-python-fe050/</guid>
      <description>It records how to set up the popular MongoDB database for data analysis.  Download Download link → https://www.mongodb.com/download-center/community
Installation settings Set the path to C:\mongodb (not C:\Program Files)
Installation is set to Custom instead of Complete, and a new folder is created under C drive. ↓ 
Installation takes about 5 minutes.
After installation, create a C:\mongodb\data folder.
How to start the server Move the directory with cd C:\mongodb\bin, (If you often use it from now on, you may register C:\mongodb\bin as an environmental coefficient.</description>
    </item>
    
    <item>
      <title>About 02/02/2020 *This is a Python article.</title>
      <link>https://japan2018.github.io/about-02-02-2020-this-is-a-python-article.-fb8cc/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/about-02-02-2020-this-is-a-python-article.-fb8cc/</guid>
      <description>#Introduction  One day 2019 I came across a wonderful article.
About April 5, 2013 *This is a Ruby article. TECHSCORE BLOG
The following is a summary of the contents.
 There is no overlap in the numbers that make up April 5, 2013. Wow! When was the last time? Next time Survey by Ruby program! The last time was &amp;ldquo;○○○○○○○○○○&amp;rdquo; and the next time was &amp;ldquo;XXXXXXXXXXXXXXXX&amp;rdquo;!  I personally read it and enjoyed it.</description>
    </item>
    
    <item>
      <title>Function review</title>
      <link>https://japan2018.github.io/function-review-fe052/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/function-review-fe052/</guid>
      <description>Function that determines whether the specified number is positive or negative  def discri(a): if a&amp;gt; 0: return str(a) +&amp;#39;is a positive number. &amp;#39; elif a == 0: return str(a) +&amp;#39;is zero. &amp;#39; else: return str(a) +&amp;#39;is a negative number. &amp;#39; print(discri(15)) print(discri(0)) print(discri(-24)) Judge 15 and 0 and -24.</description>
    </item>
    
    <item>
      <title>Make a compatibility judgment program with python&#39;s random module.</title>
      <link>https://japan2018.github.io/make-a-compatibility-judgment-program-with-pythons-random-module.-fb10f/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/make-a-compatibility-judgment-program-with-pythons-random-module.-fb10f/</guid>
      <description>#Introduction  This is a game for beginners. Please feel free to read it.
This time, I made a program to judge compatibility with that child that I often see on the net.
#Program creation Let&amp;rsquo;s make it.
The goal this time is to enter the names of the two people you want to judge and to express the compatibility of those two as a percentage.
The random module is used for the% display part.</description>
    </item>
    
    <item>
      <title>Python Crawling &amp; Scraping Chapter 4 Summary</title>
      <link>https://japan2018.github.io/python-crawling-scraping-chapter-4-summary-fdecf/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-crawling-scraping-chapter-4-summary-fdecf/</guid>
      <description>#Introduction  Learning summary of &amp;ldquo;Python crawling &amp;amp; scraping [enhanced and revised version] Practical development guide for data collection and analysis&amp;rdquo; The fourth chapter of this time was mainly about the points to note when making a crawler under the theme of &amp;ldquo;methods for practical use&amp;rdquo;.
#4.1 Crawler characteristics ##4.1.1 Crawler with state
  Create a crawler that supports cookies when crawling sites that require login -Python&amp;rsquo;s Requests library automatically sends cookies to the server by using Session object</description>
    </item>
    
    <item>
      <title>Ultra simple case k-means python code</title>
      <link>https://japan2018.github.io/ultra-simple-case-k-means-python-code-fa856/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/ultra-simple-case-k-means-python-code-fa856/</guid>
      <description>## python code for super simple case of k-means method  In the humanities of statistical application of the statistical test 1st grade in 2019, there was a problem about the initial value dependence of the k-means method, but here, in order to confirm that k-means actually depends on the initial value, I wrote the python code for a super simple case.
The situation setting is as follows. Classifying set: a set whose elements are (finite number) real numbers.</description>
    </item>
    
    <item>
      <title>My os (Python)</title>
      <link>https://japan2018.github.io/my-os-python-f9eba/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/my-os-python-f9eba/</guid>
      <description>Summary for yourself  Update from time to time
Sometimes the terms are wrong because I know myself
! View
#command # Optional argument description What is #os used for? Is it a folder operation?
 Module loading import os #glob is a bonus import glob Frequent operations Get folder/file #Get current directory os.getcwd() #Get file name os.basename() #Get absolute path os.path.abspath() __file__ # path of the file being executed #Get folder name os.</description>
    </item>
    
    <item>
      <title>Python standard library: First half (Python learning memo ⑧)</title>
      <link>https://japan2018.github.io/python-standard-library-first-half-python-learning-memo-f82e2/</link>
      <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python-standard-library-first-half-python-learning-memo-f82e2/</guid>
      <description>## OS interface  Functions that interact with the operating system
import os os.getcwd() # get current directory os.system(&amp;#39;mkdir today&amp;#39;) # Execute command in system shell The shutil module is useful for managing files and directories
import shutil shutil.copyfile(&amp;#39;data.db&amp;#39;,&amp;#39;archive.db&amp;#39;) shuti.move(&amp;#39;/build/executables&amp;#39;,&amp;#39;installdir&amp;#39;) File wildcard The glob module returns a list of files with a wildcard search in a directory
import glob glob.glob(&amp;#39;*.py&amp;#39;) A list of files ending with #.py is returned Command line arguments Arguments passed when executing python command are stored in sys.</description>
    </item>
    
    <item>
      <title>Convert cubic mesh code to WKT with Python</title>
      <link>https://japan2018.github.io/convert-cubic-mesh-code-to-wkt-with-python-fa2a2/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/convert-cubic-mesh-code-to-wkt-with-python-fa2a2/</guid>
      <description>Although it is a memorandum level, I created a function to convert the 3rd mesh code to WKT with python.  It&amp;rsquo;s plain, but it tends to be impossible to calculate when it is needed &amp;hellip;
def toWKTfromMeshCode3(mcode3:&amp;#39;mesh code(str)&amp;#39;):-&amp;gt;&amp;#39;wkt(str)&amp;#39; south = (int(mcode3[0:2]) * 80 + int(mcode3[4:5]) * 10 + (int(mcode3[6:7]))) * 30/3600 west = (int(mcode3[2:4]) * 80 + int(mcode3[5:6]) * 10 + (int(mcode3[7:8]))) * 45/3600 + 100 north = south + 30/3600 east = west + 45/3600 wkt =&amp;#39;POLYGON(({e} {n},{w} {n},{w} {s},{e} {s},{e} {n}))&amp;#39;.</description>
    </item>
    
    <item>
      <title>Beginners want to make a Rubik&#39;s Cube style thing in UE4 and make it a library for reinforcement learning #6</title>
      <link>https://japan2018.github.io/beginners-want-to-make-a-rubiks-cube-style-thing-in-ue4-and-make-it-a-library-for-reinforcement-learning-#6-fb445/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/beginners-want-to-make-a-rubiks-cube-style-thing-in-ue4-and-make-it-a-library-for-reinforcement-learning-#6-fb445/</guid>
      <description>Continuing from the previous article, this article is about how beginners can make various Python libraries that involve UE4 (almost as a memorandum for themselves...).  First: #1 Last time: #5
Observation We will implement around I will write the control processing around the observed value. Basically, it is necessary to perform processing such as saving after the action, and the column of the action ID is prepared in the prepared SQLite table, so we will add the place to connect with BP to the action module ( I also thought about adding a module that uses PyActor for Observation separately, but I will add it to the action because cooperation with action relations becomes useless and complicated).</description>
    </item>
    
    <item>
      <title>Difference between return and print-Python</title>
      <link>https://japan2018.github.io/difference-between-return-and-print-python-ff839/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/difference-between-return-and-print-python-ff839/</guid>
      <description>I did not understand the difference between return and print, so I will summarize here. However, I haven&#39;t grasped the difference completely, so I hope to understand the difference clearly.  return = In a function, return the value to the caller. I was confused, but since return returns a value, you have to use print if you want to output the value. print = Just print a string. It is used not only at the time of function but also in various situations.</description>
    </item>
    
    <item>
      <title>Get Boolean with Flask request</title>
      <link>https://japan2018.github.io/get-boolean-with-flask-request-fcd45/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/get-boolean-with-flask-request-fcd45/</guid>
      <description>#Environment   python 3.7.0 Flask 1.0.2  #First SOURCE API that only receives and returns bool type is_hoge with request
from flask import Flask, request app = Flask(__name__) @app.route(&amp;#34;/&amp;#34;, methods=[&amp;#39;GET&amp;#39;]) def hello(): is_hoge = request.args.get(&amp;#39;is_hoge&amp;#39;, type=bool) return f&amp;#39;{ is_hoge }&amp;#39; if __name__ == &amp;#34;__main__&amp;#34;: app.run() Expected value  True if you send true False if you send false False if you send 0  Execution result  if you send true  if you send false  If you send 0   What do you say?</description>
    </item>
    
    <item>
      <title>Update Python on Mac from 2 to 3</title>
      <link>https://japan2018.github.io/update-python-on-mac-from-2-to-3-ff40e/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/update-python-on-mac-from-2-to-3-ff40e/</guid>
      <description># Overview  This article is a step-by-step article on how a beginner himself developed a coupon distribution service for iPhone with RESTful API and swift. It was a very detouring implementation because we implemented it while examining the technical elements one by one.
Python is originally installed on the Mac, but the version is old as of OS 10.15. When actually writing Python, everyone seems to have been updated to 3 series.</description>
    </item>
    
  </channel>
</rss>