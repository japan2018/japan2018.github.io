<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apply_async on Some Title</title>
    <link>https://japan2018.github.io/tags/apply_async/</link>
    <description>Recent content in apply_async on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/apply_async/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to use python multiprocessing (cont. 3) apply_async in a class that has Pool as a member</title>
      <link>https://japan2018.github.io/how-to-use-python-multiprocessing-cont.-3-apply_async-in-a-class-that-has-pool-as-a-member-ff80f/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/how-to-use-python-multiprocessing-cont.-3-apply_async-in-a-class-that-has-pool-as-a-member-ff80f/</guid>
      <description>### Purpose  I have been studying since yesterday, but I feel that I have finally come close to the shape I want to use, so I will write it down again here.
 For input that comes asynchronously, I want to move the processing without blocking in a separate process I want to catch the end properly  I wanted to realize that. I made a note yesterday, but it feels like I&amp;rsquo;ve settled down here.</description>
    </item>
    
  </channel>
</rss>