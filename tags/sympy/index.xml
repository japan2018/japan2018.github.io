<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> sympy on Memo Tut</title>
    <link>https://memotut.com/tags/sympy/</link>
    <description>Recent content in  sympy on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/sympy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Control Engineering] Transfer function graphing in Python</title>
      <link>https://memotut.com/control-engineering-transfer-function-graphing-in-python-5e006/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/control-engineering-transfer-function-graphing-in-python-5e006/</guid>
      <description>#1.First of all  ・This page was created because I received a comment from the qiita page (https://qiita.com/sato235/items/f991411074c578d1640c) that I wrote last time that it would be interesting to output a waveform graph for consideration.
#2.Reference #2.1. Books [1] Hiroki Minami, Ohmsha, &amp;ldquo;Introduction to Control Engineering with Python&amp;rdquo;
#2.2. Web page a) Author support page for [1], https://y373.sakura.ne.jp/minami/pyctrl b) Previous self page, https://qiita.com/sato235/items/f991411074c578d1640c c) Graphing function of matlab function of control module, http://matsulib.</description>
    </item>
    
    <item>
      <title>Play with Poincaré series and SymPy</title>
      <link>https://memotut.com/play-with-poincar%C3%A9-series-and-sympy-4a377/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/play-with-poincar%C3%A9-series-and-sympy-4a377/</guid>
      <description>This post is an article for December 11, 2019 of [2019 Numerical Calculation Advent Calendar](https://qiita.com/advent-calendar/2019/numerical_analysis), but it is almost poem...  Poincaré series (loosely defined) $$ V = \bigoplus_{k = 0}^\infty V_k $$ Let be the vector space with degree ($\deg V_k = k$). Then, **Poincare series **$P(V; t)$ of $V$ is transformed into the following formal power series $$ P(V; t) := \sum_{k = 0}^\infty (\dim V_k)\ t^k $$ It is defined by.</description>
    </item>
    
    <item>
      <title>With Sympy, don&#39;t worry</title>
      <link>https://memotut.com/with-sympy-dont-worry-e4eab/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/with-sympy-dont-worry-e4eab/</guid>
      <description>Arithmetic using Sympy  Preparation for use with Google Colab # Currently Google Colab includes Sympy 1.1.1. # Sympy 1.1 cannot calculate the “special solution” described later, so upgrade to 1.3. !pip install sympy==1.3 Collecting sympy==1.3 [?25l Downloading https://files.pythonhosted.org/packages/dd/f6/ed485ff22efdd7b371d0dbbf6d77ad61c3b3b7e0815a83c89cbb38ce35de/sympy-1.3.tar.gz (5.9MB) [K | ████████████████████████████████ | 5.9MB 4.1MB/s (?25hRequirement already satisfied: mpmath&amp;gt;=0.19 in /usr/local/lib/python3.6/dist-packages (from sympy==1.3) (1.1.0) Building wheels for collected packages: sympy Building wheel for sympy (setup.py) ... [?25l [?25hdone Created wheel for sympy: filename=sympy-1.</description>
    </item>
    
  </channel>
</rss>