<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>responder on Memo Tut</title>
    <link>https://memotut.com/tags/responder/</link>
    <description>Recent content in responder on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/responder/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Performance comparison of Python web frameworks (Django, Flask, responder, FastAPI, japronto)</title>
      <link>https://memotut.com/performance-comparison-of-python-web-frameworks-django-flask-responder-fastapi-japronto-0ad26/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/performance-comparison-of-python-web-frameworks-django-flask-responder-fastapi-japronto-0ad26/</guid>
      <description>I made a simple API using the following Python Web framework and tried a load test.   Django (2.X) Flask FastAPI responder japronto  As a result, I found the following roughly!
 Performance can be said to be &amp;ldquo;japronto &amp;raquo;&amp;gt; FastAPI&amp;gt; responder &amp;raquo;&amp;gt; Flask ~ Django&amp;rdquo; FastAPI and responder are single workers, and if they request about 100-1000 seconds per second**, they have overwhelming performance in the python world almost the same level as japronto**  (The code used for the verification is here.</description>
    </item>
    
    <item>
      <title>Schema-driven development with Responder: Try displaying Swagger UI</title>
      <link>https://memotut.com/schema-driven-development-with-responder-try-displaying-swagger-ui-6ad57/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/schema-driven-development-with-responder-try-displaying-swagger-ui-6ad57/</guid>
      <description>#What is Schema Driven Development  Simply put, it is a development method that first decides the schema of API (definition of request and response types and field names), systematically generates documents and mocks accordingly, and then implements the internal implementation. (Reference: Schema Driven Development Optimization &amp;amp; Implementation Example for Optimizing Team Web API Development)
I would like to try schema driven development with responder which is a python web framework.</description>
    </item>
    
  </channel>
</rss>