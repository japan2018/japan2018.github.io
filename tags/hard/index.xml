<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Hard on Some Title</title>
    <link>https://japan2018.github.io/tags/hard/</link>
    <description>Recent content in  Hard on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/hard/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parametric Neural Network</title>
      <link>https://japan2018.github.io/parametric-neural-network-fcc61/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/parametric-neural-network-fcc61/</guid>
      <description># About neural networks  Original flow  Pass the value of the activation function to the next node according to the input information Linearly combine all the received information based on weight $w$ and bias $b$. Input the linearly combined value to the activation function and pass the value to the next node Repeat steps 2 and 3 to output the value from the final node Compute the loss function from the final output (although the last layer has only one node in the PNN): steps 1-6 are forward propagation Next, calculate the weight at each branch using the loss function: back propagation One training is completed in steps 1-7.</description>
    </item>
    
    <item>
      <title>Difference between keras and tf.keras and compatibility verification #1</title>
      <link>https://japan2018.github.io/difference-between-keras-and-tf.keras-and-compatibility-verification-#1-fcfbf/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/difference-between-keras-and-tf.keras-and-compatibility-verification-#1-fcfbf/</guid>
      <description>#Keras development end  It&amp;rsquo;s been a while since I posted. As you can see on github, it seems that development of the multi-backend Keras ended in April 2020. It will be replaced by Keras in Tensorflow in the future. keras-team (For convenience, the multi-backend Keras is expressed as mb-keras, and the Tensorflow Keras is expressed as tf-keras.) I would like to compare and verify mb-keras and tf-keras in this article.</description>
    </item>
    
    <item>
      <title>Understand the number of input and output parameters of convolutional neural network</title>
      <link>https://japan2018.github.io/understand-the-number-of-input-and-output-parameters-of-convolutional-neural-network-ff1af/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/understand-the-number-of-input-and-output-parameters-of-convolutional-neural-network-ff1af/</guid>
      <description>Basically learning with keras and python  What I learned  Understand the number of input and output parameters of layers Understand data processing after processing convolutional layer and pooling layer  Code used for learning mnist cnn code from keras documentation.
from __future__ import print_function import keras from keras.datasets import mnist from keras.models import Sequential from keras.layers import Dense, Dropout, Flatten from keras.layers import Conv2D, MaxPooling2D from keras import backend as K batch_size = 128 num_classes = 10 epochs = 12 # input image dimensions img_rows, img_cols = 28, 28 # the data, split between train and test sets (x_train, y_train), (x_test, y_test) = mnist.</description>
    </item>
    
    <item>
      <title>[Model construction] Using the data set of Reuters communication, create a model (MLP) that classifies news into topics with keras (TensorFlow 2 system)</title>
      <link>https://japan2018.github.io/model-construction-using-the-data-set-of-reuters-communication-create-a-model-mlp-that-classifies-news-into-topics-with-keras-tensorflow-2-system-ff9e0/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/model-construction-using-the-data-set-of-reuters-communication-create-a-model-mlp-that-classifies-news-into-topics-with-keras-tensorflow-2-system-ff9e0/</guid>
      <description>## Last pre-processing!  This article is a sequel to [Pre-processing]. [Pre-processing] Creating a model (MLP) for classifying news into topics using Reuters communication data set (TensorFlow 2 series)
Please refer to the pre-processing section for the operating environment.
Model learning Create a model using the preprocessed news article text x_train and the news label y_train.
This time, we will use a two-layer MLP (Multilayer Perceptron) as a simple model.</description>
    </item>
    
    <item>
      <title>Create a machine learning environment from scratch with Winsows10</title>
      <link>https://japan2018.github.io/create-a-machine-learning-environment-from-scratch-with-winsows10-fa354/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/create-a-machine-learning-environment-from-scratch-with-winsows10-fa354/</guid>
      <description>#Introduction  Do you guys do it?
Machine learning
He has been touted for the last three years as the third AI boom. Artificial intelligence, machine learning, neural networks, deep learning I&amp;rsquo;ve been studying silently these days, but it&amp;rsquo;s kind of difficult&amp;hellip;
This time, let&amp;rsquo;s leave that area and create a machine learning environment quickly. It&amp;rsquo;s surprisingly easy to make. (I think there are many reference articles, but I also use them as notes for myself)</description>
    </item>
    
  </channel>
</rss>