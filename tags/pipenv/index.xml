<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pipenv on Memo Tut</title>
    <link>https://memotut.com/tags/pipenv/</link>
    <description>Recent content in Pipenv on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/pipenv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Static type checking that starts loosely in Python</title>
      <link>https://memotut.com/static-type-checking-that-starts-loosely-in-python-6341d/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/static-type-checking-that-starts-loosely-in-python-6341d/</guid>
      <description>I had been writing TypeScript for about a year, but I started to work on Python3 for about a month.  Although Python is simple and fun, there are places that I inherited from other people, and it is hard to develop and have no type.
The hardest part is reading the code, and what does this function return? Do not know at first glance what this variable contains. &amp;hellip;&amp;hellip;There is no type as a document.</description>
    </item>
    
    <item>
      <title>[Python] [python] For some reason, python on the Windows side is called during WSL pipenv install</title>
      <link>https://memotut.com/python-for-some-reason-python-on-the-windows-side-is-called-during-wsl-pipenv-install-bfa90/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/python-for-some-reason-python-on-the-windows-side-is-called-during-wsl-pipenv-install-bfa90/</guid>
      <description># Overview   Why do I get an error when trying to install pipenv in a repository with wsl? .. .. Apparently it refers to python on windows side By specifying python with full path, countermeasures are completed for the time being  #Environment
 Windows10 1909 wsl ubuntu 18.0LTS pyenv 1.2.13-35-g22c0202 python 3.8.0 pipenv 2018.11.26  Phenomenon When I try to install pipenv in my project with WSL for the first time after python3.</description>
    </item>
    
    <item>
      <title>[Python] Automated test of Pipenv &#43; Pytest with Github Actions</title>
      <link>https://memotut.com/automated-test-of-pipenv-pytest-with-github-actions-e74c6/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/automated-test-of-pipenv-pytest-with-github-actions-e74c6/</guid>
      <description># Overview  Last time, I performed an automatic test using Travis CI in “I did an automated test of Pipenv + Pytest with Travis CI”,but[GithubActions]((https://help.github.com/ja/actions/automating-your-workflow-with-github-actions/about-github-actions) is now available, so I tried it here as well. The repositories that I actually tried are as follows. https://github.com/doara-developer/weatherlib
Github Actions CI/CD tool on Github. It&amp;rsquo;s still in beta now, but soon will be standard support. Available by sending Beta Participation Request. In my case, I went there a few days after applying.</description>
    </item>
    
    <item>
      <title>[Python] [Ubuntu 18.04] Build Python environment with pyenv&#43;pipenv</title>
      <link>https://memotut.com/ubuntu-18.04-build-python-environment-with-pyenv-pipenv-08036/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/ubuntu-18.04-build-python-environment-with-pyenv-pipenv-08036/</guid>
      <description>#Introduction  Create a virtual environment management environment (?) using pyenv and pipenv. The version control of Python itself is done with pyenv, and the virtual environment for each project and package management are done with pipenv.
#Environment
 Ubuntu 18.04 You can use apt install  Install #!/bin/bash  # Install dependencies echo &amp;#34;user password&amp;#34; | sudo apt update &amp;amp;&amp;amp; sudo apt install -y --no-install-recommends \  build-essential \  libffi-dev \  libssl-dev \  zlib1g-dev \  libbz2-dev \  libreadline-dev \  libsqlite3-dev \  git # Download pyenv git clone https://github.</description>
    </item>
    
  </channel>
</rss>