<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> softmax function on Some Title</title>
    <link>https://japan2018.github.io/tags/softmax-function/</link>
    <description>Recent content in  softmax function on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/softmax-function/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deep learning/Softmax function</title>
      <link>https://japan2018.github.io/deep-learning-softmax-function-fc805/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/deep-learning-softmax-function-fc805/</guid>
      <description>#1.First of all  This time, I will briefly summarize the softmax function.
#2. What is the softmax function? Convert the output of the neural network into a total probability of 1. ![Screenshot 2020-03-28 16.31.12.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/209705/1297a7fb-d2fc-4cee-babe-(4ff1aa6198bb.png)
#3.Specific calculation If the output $y_1$-$y_3$ is as follows,
The result of passing the softmax function is ![Screenshot 2020-03-28 16.25.28.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/209705/d8bbcd6a-8a78-86f6-ba13-(16bc42ec5b12.png)
#4. Code
import numpy as np def softmax(z): y = np.exp(z) / np.sum(np.exp(z)) return y z = np.</description>
    </item>
    
  </channel>
</rss>