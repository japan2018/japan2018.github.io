<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> pip on Memo Tut</title>
    <link>https://memotut.com/tags/pip/</link>
    <description>Recent content in  pip on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/pip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] [Easy explosion] Make a web application in minutes with Streamlit without the need for HTML files</title>
      <link>https://memotut.com/566c20733/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/566c20733/</guid>
      <description>## What is Streamlit?  Streamlit is an open source framework for Python.
Goal this time For the time being, I would like to easily make something like a web application. The most difficult part in creating a web application is the processing of the back end and the creation of HTML files, but Streamlit seems to have no need to do those tasks at all. You can make a web page with just one Python file.</description>
    </item>
    
    <item>
      <title>[Python] If you get SSL related errors with pip install, read this! ! !</title>
      <link>https://memotut.com/9c50b5457/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/9c50b5457/</guid>
      <description>#Environment  mac OS Catalina python 3.6.5
Situation I left python for a while (about 1 year), but when I tried to install a new package, pip install &amp;lt;package name&amp;gt; got this error&amp;hellip;
WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available. Collecting numpy-stl (the package name I tried to install this time) WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by&#39;SSLError(&amp;quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.</description>
    </item>
    
    <item>
      <title>[Python] Is SSL certificate related with pip install? Error</title>
      <link>https://memotut.com/14d05ddf0/</link>
      <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/14d05ddf0/</guid>
      <description>```pip install```しようとすると、下記のエラー。  pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available. Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;#39;SSLError(&amp;#34;Can&amp;#39;t connect to HTTPS URL because the SSL module is not available.&amp;#34;)&amp;#39;: /simple/pip/ Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;#39;SSLError(&amp;#34;Can&amp;#39;t connect to HTTPS URL because the SSL module is not available.&amp;#34;)&amp;#39;: /simple/pip/ Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;#39;SSLError(&amp;#34;Can&amp;#39;t connect to HTTPS URL because the SSL module is not available.</description>
    </item>
    
    <item>
      <title>[Python] Do you know it unexpectedly? pip command</title>
      <link>https://memotut.com/b407dc4cc/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/b407dc4cc/</guid>
      <description>Introducing frequently used commands to complicated commands for each use case.  Case 1. Dependency care The script doesn&amp;rsquo;t work because of a package dependency issue&amp;hellip;
(1) Check for dependency issues.
$ pip check # If the package dependencies are okay, # No broken requirements found. # Is output. (2) After confirming the required version of the package, confirm the available version.
$ pip install &amp;lt;package&amp;gt;== # ERROR: Could not find a version that satisfies the requirement &amp;lt;package&amp;gt;== (.</description>
    </item>
    
    <item>
      <title>[Python] About package management with conda and pip</title>
      <link>https://memotut.com/29efebeb3/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/29efebeb3/</guid>
      <description>[Anaconda](https://www.anaconda.com/) is, in a word, a library of scientific computations etc. attached from the beginning in addition to Python itself. In addition, it has been devised to simplify package management and deployment, and comes with a package management command called conda.  About conda and pip The Python world has been around for quite some time with its own package management tools, which used to be EasyInstall, and later to use pip.</description>
    </item>
    
    <item>
      <title>[Python] 6 Python libraries for development and debugging</title>
      <link>https://memotut.com/606429ada/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/606429ada/</guid>
      <description># table of contents   Overview Operating environment Introducing Python library -flake8 -pyformat -isort -mypy -bpython -ipdb Finally  Overview When developing privately from packages that are often used at work, I have introduced the packages that are always installed. I think that people in the data science field use Jupyter, so it is suitable for web development. There are special packages that are useful when using Web frameworks such as Django, but they are not mentioned in this article.</description>
    </item>
    
    <item>
      <title>[Python] Frequently used pip commands</title>
      <link>https://memotut.com/fe4a246a7/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/fe4a246a7/</guid>
      <description>A memo of frequently used pip commands.  Check the version $ pip --version pip 10.0.1 from ~/.pyenv/versions/3.5.3/lib/python3.5/site-packages/pip (python 3.5) Install the package normally (eg Flask) pip install Flask install the packages defined in requirements.txt pip install -r requirements.txt Show installed packages pip list display installed packages in requires.txt format pip freeze Show installed packages that are out of date pip list --outdated Update installed packages that are not the latest pip list --outdated | awk&amp;#39;NR&amp;gt;2 {print $1}&amp;#39; | xargs pip install -U remove all installed packages pip freeze | xargs pip uninstall -y </description>
    </item>
    
  </channel>
</rss>