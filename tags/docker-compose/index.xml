<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker-compose on Memo Tut</title>
    <link>https://memotut.com/tags/docker-compose/</link>
    <description>Recent content in docker-compose on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Rebuild Django development environment with Docker! ! ! !</title>
      <link>https://memotut.com/rebuild-django-development-environment-with-docker-e345f/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/rebuild-django-development-environment-with-docker-e345f/</guid>
      <description>#Introduction  I wrote this article before. [Build Django development environment with Docker! (Docker-compose/Django/postgreSQL/nginx)]](https://qiita.com/nokonoko_1203/items/242367a83c313a5e46bf)
The original article was written a long time ago (a year or so?), but now that I have enough knowledge, I thought I could make it a little better, so I decided to try it!
I will not talk about installing Docker in detail, so if you are interested, please check the original article! (Here)willhelp.)
Also, as a clear difference from the previous article, Django thinks as an API delivery server and assumes Vue.</description>
    </item>
    
    <item>
      <title>[Python] Kaggle&#39;s feature management was better than I thought with PostgreSQL, so I made a directory that anyone can use with Docker</title>
      <link>https://memotut.com/kaggles-feature-management-was-better-than-i-thought-with-postgresql-so-i-made-a-directory-that-anyone-can-use-with-docker-44814/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/kaggles-feature-management-was-better-than-i-thought-with-postgresql-so-i-made-a-directory-that-anyone-can-use-with-docker-44814/</guid>
      <description>This article is from the 19th day of [Kaggle Advent Calendar 2019](https://qiita.com/advent-calendar/2019/kaggle).  Hi, my name is kiccho1101! Writing an article for the first time in my life! Thank you!
Introduction This time, I tried to use Kaggle&amp;rsquo;s feature quantity management with PostgreSQL, but it was faster than I thought, so I would like to introduce it.
The created directory is here: https://github.com/kiccho1101/datascience-template ↑ The README has a usage example using the data of Titanic competition.</description>
    </item>
    
    <item>
      <title>[Python] Until the infrastructure engineer builds GitLab and makes CI/CD work</title>
      <link>https://memotut.com/until-the-infrastructure-engineer-builds-gitlab-and-makes-ci-cd-work-6ec0f/</link>
      <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/until-the-infrastructure-engineer-builds-gitlab-and-makes-ci-cd-work-6ec0f/</guid>
      <description># Background  Since joining the company as an infrastructure engineer and working on AWS projects, I have been writing more Python for CloudFormation and Lambda. The name of Git/GitHub/GitLab was at a level I&amp;rsquo;ve heard about, but the version control mentioned above is mandatory, and you will be using your own GitLab. Although I was an amateur, I immediately felt the convenience, and I thought that it would be better if I could establish GitLab after studying Docker on ESXi at home.</description>
    </item>
    
    <item>
      <title>[Python] Deploy Django in 3 minutes using docker-compose</title>
      <link>https://memotut.com/deploy-django-in-3-minutes-using-docker-compose-d3a56/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/deploy-django-in-3-minutes-using-docker-compose-d3a56/</guid>
      <description>I have created docker-compose in a form that can be used even for projects that have already been created, so I will summarize the specifications in an article.  ** Please see How to Use on GitHub → GitHub**
(I&amp;rsquo;m sorry if you change the DB from the default sqlite&amp;hellip;
The deployment environment is Django＋Nginx＋Gunicorn.
Overview Please refer to the README on GitHub for how to use the link provided above.</description>
    </item>
    
  </channel>
</rss>