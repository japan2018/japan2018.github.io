<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Getting Started on Some Title</title>
    <link>https://japan2018.github.io/tags/getting-started/</link>
    <description>Recent content in  Getting Started on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>For beginners of SageMaker-Document link collection-</title>
      <link>https://japan2018.github.io/for-beginners-of-sagemaker-document-link-collection-fecb8/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/for-beginners-of-sagemaker-document-link-collection-fecb8/</guid>
      <description>SageMaker, a machine learning management service of AWS, does not come out with pinpoint points, so I will summarize it.  Amazon SageMaker features When operating the ML system in the production environment, the managed function is really effective. A component for realizing MLops and MDLC. The true benefit cannot be obtained only by developing the PoC model.
Official reference Machine Learning Lens, AWS Well-Architected Framework https://d1.awsstatic.com/whitepapers/architecture/wellarchitected-Machine-Learning-Lens.pdf Guidelines for ML systems built on AWS</description>
    </item>
    
    <item>
      <title>[Python3 Getting Started Day 21] Chapter 10 System (10.1 ~ 10.5)</title>
      <link>https://japan2018.github.io/python3-getting-started-day-21-chapter-10-system-10.1-~-10.5-fb945/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/python3-getting-started-day-21-chapter-10-system-10.1-~-10.5-fb945/</guid>
      <description>#10.1 file  ##10.1.1 Create by open()
 The open() function not only opens a file, but creates a new file when you request a file that does not exist.  &amp;gt;&amp;gt;&amp;gt; fout=open(&amp;#34;oops.txt&amp;#34;,&amp;#34;wt&amp;#34;) &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;Oops,I created a file.&amp;#34;,file=fout) &amp;gt;&amp;gt;&amp;gt; fout.close() ##10.1.2 Check for existence of file by exists()
&amp;gt;&amp;gt;&amp;gt; import os &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;oops.txt&amp;#34;) True &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;./oops.txt&amp;#34;) True &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;aaa.txt&amp;#34;) False &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;.&amp;#34;) True &amp;gt;&amp;gt;&amp;gt; os.path.exists(&amp;#34;..&amp;#34;) True ##10.1.3 Checking file type with isfile()</description>
    </item>
    
  </channel>
</rss>