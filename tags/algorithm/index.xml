<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> algorithm on Memo Tut</title>
    <link>https://memotut.com/tags/algorithm/</link>
    <description>Recent content in  algorithm on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Python implementation of non-recursive Segment Tree</title>
      <link>https://memotut.com/python-implementation-of-non-recursive-segment-tree-afa12/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/python-implementation-of-non-recursive-segment-tree-afa12/</guid>
      <description>#Introduction  As the title suggests, I would like to introduce the implementation of non-recursive Segment Tree by **Python. If you already know it, you can skip it because I will start from the explanation of Segment Tree so that you do not need &amp;ldquo;almost&amp;rdquo; 1 of knowledge. â†’ Implementation of non-recursive segment tree
What is # Segment Tree It is a data structure that is commonly called segment tree, segment tree, etc.</description>
    </item>
    
    <item>
      <title>[Python] Minimal implementation for doing UnionFind in Python</title>
      <link>https://memotut.com/minimal-implementation-for-doing-unionfind-in-python-52fd4/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/minimal-implementation-for-doing-unionfind-in-python-52fd4/</guid>
      <description>Hello! I am happy.  Sometimes I had problems with UnionFind, but I tended to use other people&amp;rsquo;s libraries, so I&amp;rsquo;ll write about it as a review. If you think that it&amp;rsquo;s like a forgetful personal note
Important example AtCoder Typical Contest 001 B-Union Find https://atcoder.jp/contests/atc001/tasks/unionfind_a
Union Find&amp;rsquo;s pure problem An explanation slide is also attached, so I will follow along with this.
https://www.slideshare.net/chokudai/union-find-49066733 Union find (primary set data structure) from AtCoder Inc</description>
    </item>
    
    <item>
      <title>[Python] Liar and Honest Issues</title>
      <link>https://memotut.com/liar-and-honest-issues-ae493/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/liar-and-honest-issues-ae493/</guid>
      <description>#### Introduction  At a certain point, I found the following &amp;ldquo;Problems of liars and honests&amp;rdquo;. I was interested, so I tried programming with Python.
  There were 4 people in a village, A, B, C, and D. Two of them are known to be liars, and two of these are known to be honest. Liars always lie and honests always answer honestly. They are logical and there are no mistakes.</description>
    </item>
    
    <item>
      <title>[Python] I want to understand (engineering) UMAP, which is stronger than t-SNE</title>
      <link>https://memotut.com/i-want-to-understand-engineering-umap-which-is-stronger-than-t-sne-06ab8/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/i-want-to-understand-engineering-umap-which-is-stronger-than-t-sne-06ab8/</guid>
      <description>Do you know UMAP?  I know
If you&amp;rsquo;ve heard it but don&amp;rsquo;t know it, this article will help you understand it.
#What is UMAP
It is a method to reduce and visualize dimensions faster and with higher performance than t-SNE. Compare with the commonly used t-SNE. The following figure is a visualization of Fashion MNIST.
(From Understanding UMAP)
Compared to t-SNE, UMAP seems to have distinct clusters. Similar categories are placed near each other and dissimilar categories are placed far away.</description>
    </item>
    
    <item>
      <title>[Python] Behind the graph drawing algorithm and Networkx</title>
      <link>https://memotut.com/behind-the-graph-drawing-algorithm-and-networkx-7c550/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/behind-the-graph-drawing-algorithm-and-networkx-7c550/</guid>
      <description># 0. How do you draw a graph?  In order to draw in 2D, it is necessary to give proper coordinates to each vertex, but the graph only has information on vertices and edges. How do you place the vertices? ?
In this article, I will explain an algorithm Fruchterman-Reingold algorithm that arranges graphs in a nice way. With Python, you can easily use the library called networkx. However, it is too easy to be frustrated, so I will check the mechanism while following the GitHub implementation of networkx.</description>
    </item>
    
    <item>
      <title>[Python] Persistent data structure created from scratch</title>
      <link>https://memotut.com/persistent-data-structure-created-from-scratch-72e7f/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/persistent-data-structure-created-from-scratch-72e7f/</guid>
      <description>#Introduction  Many data structures provide destructive operations. Arrays, for example, offer the ability to update one element with another. The processing time of the array update operation is excellent in that it does not depend on the length or value of the array. On the other hand, there are times when you want to perform non-destructive operations on data structures. For example, in each calculation of reduce/fold processing (convolution operation) that uses an array as a cumulative value, a new array should be generated nondestructively (it is possible to use the array after destruction as the calculation result, but Is hard to say).</description>
    </item>
    
    <item>
      <title>[Python] I tried to compress the image using machine learning</title>
      <link>https://memotut.com/i-tried-to-compress-the-image-using-machine-learning-fb6ee/</link>
      <pubDate>Fri, 04 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/i-tried-to-compress-the-image-using-machine-learning-fb6ee/</guid>
      <description>![original_compressed.png](https://qiita-image-store.s3.amazonaws.com/0/77079/2f7e9fc7-d91a-bd40-dca9-bed85174e317.png)  #Introduction Try compressing the image using K-Means, which is a typical clustering algorithm. First, I will explain the K-Means algorithm. After that, I will explain about image compression using K-Means. For details, refer to Coursera Machine Learning.
What is clustering? Dividing a collection of data into several groups (clusters) according to the similarity between the data. K-Means algorithm Intuitive description of algorithm The K-Means algorithm is roughly divided into the following three processes:</description>
    </item>
    
  </channel>
</rss>