<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenCV on Memo Tut</title>
    <link>https://memotut.com/tags/opencv/</link>
    <description>Recent content in OpenCV on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/opencv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Vertical Tower of Pisa using OpenCV ～Vertical Tower of Pisa～</title>
      <link>https://memotut.com/1111f9a16/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/1111f9a16/</guid>
      <description>#Overview  Recently, I learned image processing in a class and learned the technique of transforming a plane by matrix transformation.
Then I suddenly got an urge to make the Leaning Tower of Pisa vertical, so I&amp;rsquo;ll try to practice Python and OpenCV.
Well, I don&amp;rsquo;t understand much, so I&amp;rsquo;m good at using OpenCV useful functions.
Let&amp;rsquo;s Vertical!
#environment windows10 Python 3.7.7 OpenCV 3.4.2 Pillow 7.1.2 numpy 1.18.4
#Implementation Click here for the Leaning Tower of Pisa Since white is strong as a whole, this time try to detect the contour not by the edge but by the color tone.</description>
    </item>
    
    <item>
      <title>[Python] AnimeGAN that converts live-action film into anime style (Windows10, Python3.6)</title>
      <link>https://memotut.com/448047e8a/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/448047e8a/</guid>
      <description>#Introduction  I tried AnimeGAN, which transforms live-action film into anime style.
System environment  Windows10 (RTX2080 Max-Q, i7-8750H, RAM16GB) Anaconda 2020.02 Python 3.6 CUDA 9.0  Introduction Clone AnimeGAN.
Create an environment for animegan.
$ conda create -n animegan python=3.6 $ conda activate animegan $ pip install tensorflow-gpu==1.8.0 $ pip install tqdm $ pip install scipy $ pip install opencv-python $ cd AnimeGAN-master Put dataset on AnimeGAN-master.
Copy and paste the contents of Haoyao-style to checkpoint\AnimeGAN_Hayao_lsgan_300_300_1_3_10</description>
    </item>
    
    <item>
      <title>[Python] I tried to make a surveillance camera with motion detection with OpenCV using a WEB camera with Raspberry Pi</title>
      <link>https://memotut.com/acd0d9159/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/acd0d9159/</guid>
      <description>## Thing you want to do  It seems that a suspicious person appears at night at the entrance of the apartment where I live, so I installed a web camera on the entrance door and made a system to analyze and record with Raspberry Pi. The specifications are as follows.
 Display the recorded video and time on the screen If someone comes in front of the entrance, record a still image in jpeg format Embed the shooting time in the recorded still image Allow some false positives  *By the way, we have already obtained permission to install the camera.</description>
    </item>
    
    <item>
      <title>[Python] Face recognition with Python OpenCV</title>
      <link>https://memotut.com/1e3295796/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/1e3295796/</guid>
      <description>#Overview  This article is for people who want to perform face recognition with OpenCV of Python. In this article, I will explain how to detect faces from images, camera images, mp4 files, and how to cut and save only faces from images. #environment macOS Catalina 10.15.4 Python 3.7.5 opencv-python 4.2.0.34 numpy 1.18.2 #Install OpenCV $ pip install opencv-python
Directory structure . ├── cascades │ └── haarcascade_frontalface_default.xml ├── image_detect.py ├── images │ └── 001.</description>
    </item>
    
    <item>
      <title>[Python] Photogrammetry viewed from OpenCV. (Why pillars tend to disappear)</title>
      <link>https://memotut.com/e12d254c0/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/e12d254c0/</guid>
      <description>* In the past, we did LT about photogrammetry and OpenCV with [xRTechNagoya](https://vrm-nagoya.connpass.com/event/162233/)and[XRMTG](https://togetter.com/li/1470739) It is almost the same as the one.  About this document Photogrammetry that can create 3D data from multiple photos. It&amp;rsquo;s nice to be able to generate data without any special equipment&amp;hellip; If you use 3DF Zephyr for photogrammetry, you may be able to take it neatly like a tree trunk, or it may be something awful like a pillar.</description>
    </item>
    
    <item>
      <title>[Python] Tracking baseball with Python &#43; OpenCV</title>
      <link>https://memotut.com/e08116d98/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/e08116d98/</guid>
      <description>After seeing the OpenCV site for the first time in a while, it was new, so I tried it a little.  https://opencv.org/
I used to track baseball balls in Java a long time ago, so this time I tried using Python. Tracking is performed by combining background difference and template matching.
Environment The environment is as follows.
 Python: 3.8.0 OpentCV: 4.2.0  I am creating an environment with venv.</description>
    </item>
    
    <item>
      <title>[Python] Deep learning of Raspberry Pi 3 B&#43; &amp; PyTorch for real-time classification of multiple objects in camera images</title>
      <link>https://memotut.com/a09b44646/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/a09b44646/</guid>
      <description>I got Razpai 3B+ and picamera because of university class. Since I&#39;m free, I decided to let Razpai classify using deep learning. However, instead of classifying the pictures taken in advance, it classifies the objects in the real-time image from picamera and displays them in a nice way.  It may be at the student level, but I&amp;rsquo;d appreciate it if you can refer to even a part of it.</description>
    </item>
    
    <item>
      <title>[Python] I tried to make a program (a hint) to solve the mistake search of Saizeriya</title>
      <link>https://memotut.com/0bb193b57/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/0bb193b57/</guid>
      <description>Hello. This is my first post.  The other day, when I went to Saizeriya, the waiting time was about 20 minutes, and I was looking for a mistake in Saizeriya, and I couldn&amp;rsquo;t find it&amp;hellip; So I thought I could solve it with image processing, so I tried it. It was also a good study of OpenCV.
#Thing you want to do Image data officially published by Saizeriya using the OpenCV library (https://www.</description>
    </item>
    
    <item>
      <title>[Python] The image is binarized. Furthermore, the shortest distance between two regions can be calculated (ver1.0).</title>
      <link>https://memotut.com/05a6506da/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/05a6506da/</guid>
      <description>#Introduction  *A revised version has been created. https://qiita.com/Fumio-eisan/items/10c54af7a925b403f59f
I am working in the manufacturing industry, but I feel the flow of actively introducing IoT and AI technologies. I do not belong to the system department that mainly handles these technologies. However, I want to feel the flow myself! I think. There is a Raspberry Pi as a tool that is relatively easy to handle, so I am tentatively planning what can be done with this.</description>
    </item>
    
    <item>
      <title>[Python] Normalize image brightness</title>
      <link>https://memotut.com/9c9fc6c0e/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/9c9fc6c0e/</guid>
      <description>#Execution environment  Ubuntu 18.04 Python 3.6.9 OpenCV 3.3.0 #Overview When processing a large number of images, there are a mixture of bright and dark photos, It also affects the processing result, so I want to make the brightness uniform!
From that thought, Since I had the opportunity to adjust the brightness of the image in the preprocessing of learning, I will summarize the method. The purpose is to normalize the input color image to a uniform brightness.</description>
    </item>
    
    <item>
      <title>[Python] Error not finding Qt plugin cocoa in python-opencv</title>
      <link>https://memotut.com/aa73d837b/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/aa73d837b/</guid>
      <description>I&#39;m quite worried, so memorandum  Environment Mac OS 10.15.3 Python 3.7.3 (by homebrew) opencv-contrib-python 4.2.0.32 (by pip) opencv-python 4.2.0.32 (by pip)
solution If you put in python-opencv and try the code of the obtained one, I get the following error.
qt.qpa.plugin: Could not find the Qt platform plugin &amp;quot;cocoa&amp;quot; in &amp;quot;&amp;quot; This application failed to start because no Qt platform plugin could be initialized.Reinstalling the application may fix this problem.</description>
    </item>
    
    <item>
      <title>[Python] I tried to detect the iris from the camera image</title>
      <link>https://memotut.com/2c6cc56d0/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/2c6cc56d0/</guid>
      <description>#Introduction  We have summarized the presentation contents of 56th Computer Vision Study Group @ Kanto held on Saturday, January 19, 2020. The materials for the day can be viewed from here.
The source code is available on Github below. https://github.com/33taro/gaze_cv
#Iris detection procedure
Iris detection is a theme that I was studying when I was a university student, so I think it would be easy to do with advanced OpenCV.</description>
    </item>
    
    <item>
      <title>[Python] How to save image feature point information in a file and use it for matching</title>
      <link>https://memotut.com/8416b6f25/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/8416b6f25/</guid>
      <description>## Introduction  I often use OpenCV feature point extraction and matching, When using multiple images, feature point extraction often took time. Therefore, this time, I made a program that outputs feature point information to a file and uses it for matching.
As an example, let&amp;rsquo;s find the girl with red glasses (target image) from the girls (12 source images) this time!
Source image ⬇︎ Target image ⬇︎ Development environment This time, it was developed in the following environment.</description>
    </item>
    
    <item>
      <title>[Python] I shot Kamehameha using OpenPose</title>
      <link>https://memotut.com/ec5010d4e/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/ec5010d4e/</guid>
      <description>#Introduction  I wanted to shoot Kamehameha so I made it.
You can also hide the estimation line.
The coordinates of the joint are acquired using OpenPose, the angle is calculated from that, and it is judged whether the pose looks like that.
About OpenPose How to set up I used tf pose estimation which is Tensorflow version of OpenPose. My environment was Windows10, GTX1070, etc., so I referred to the following page for setup.</description>
    </item>
    
    <item>
      <title>[Python] cv2.Canny(): Make Canny edge detection adjustment nice</title>
      <link>https://memotut.com/1556bf8e0/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/1556bf8e0/</guid>
      <description>Edge refers to the boundary between objects and the background, and edge detection generally refers to image processing that detects edges by detecting changes in pixel values and large brightness gradients in the image.  (Image is from [Free Image Site](https://www.pakutaso.com/20191228360post-24995.html)) What is cv2.Canny() Edge detection function implemented/provided by opencv. Although edge images can be created easily, (mainly) two parameters need to be adjusted for proper use.
Official page: Documents, Tutorial</description>
    </item>
    
    <item>
      <title>[Python] Concatenate multiple videos in one shot using OpenCV!</title>
      <link>https://memotut.com/3ada3cad3/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/3ada3cad3/</guid>
      <description>I wanted to combine many videos of reinforcement learning results in one shot, so I made it.  situation A program that creates a single movie that has a directory containing multiple movies and links all the movies in it.
Source import cv2 import glob def comb_movie(movie_files,out_path): # Format is mp4 fourcc = cv2.VideoWriter_fourcc(&amp;#39;m&amp;#39;,&amp;#39;p&amp;#39;,&amp;#39;4&amp;#39;,&amp;#39;v&amp;#39;) #Get video information movie = cv2.VideoCapture(movie_files[0]) fps = movie.get(cv2.CAP_PROP_FPS) height = movie.get(cv2.CAP_PROP_FRAME_HEIGHT) width = movie.get(cv2.CAP_PROP_FRAME_WIDTH) # Open output file out = cv2.</description>
    </item>
    
    <item>
      <title>[Python] Using Python&#43;OpenCV, measure the object position (real coordinate system) on the desk from the camera image</title>
      <link>https://memotut.com/c6e468da7/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/c6e468da7/</guid>
      <description>#Introduction  The goal is to determine the position of an arbitrary object placed on a plane (desk) with a reference marker in the real coordinate system as follows. The implementation is done in Python and uses the OpenCV module ArUco.  OpenCV/ArUco library object position measurement @ inoblog.  Execution environment It uses GoogleColab. (Python 3.6.9). The module version used is:
%pip list | grep -e opencv -e numpy numpy 1.</description>
    </item>
    
    <item>
      <title>[Python] I tried to automate the face hiding work of wear coordination images</title>
      <link>https://memotut.com/dab3b4a0c/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/dab3b4a0c/</guid>
      <description>Do you all know Wear?  WEAR is a fashion coordination site and one of our services. In short, it is an SNS where you can share your fashion coordination.
I don&amp;rsquo;t know why, but it seems to be popular to post with the face hidden by an icon. Is it because people without a face can see the coordination objectively?
However, the face hiding work is surprisingly troublesome, and I wish I could automate this&amp;hellip; so I implemented a program for automatic icon placement.</description>
    </item>
    
    <item>
      <title>[Python] opencv-python image processing introduction</title>
      <link>https://memotut.com/111f0975e/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/111f0975e/</guid>
      <description>I will write that I investigated the preprocessing method of images for machine learning.  The content is halfway, but I think I will add it in the future.
Trial environment Windows10 python 3.6 opencv-python 4.1.2.30
Thresholding: cv.Threshold(src, threshold, maxValue, thresholdType) opencv documentation http://labs.eecs.tottori-u.ac.jp/sd/Member/oyamada/OpenCV/html/py_tutorials/py_imgproc/py_thresholding/py_thresholding.html
Binarize by specifying threshold I will make an appropriate gradation image and binarize it # make gray scale picture im_gray = np.array([np.arange(0, 256, 2) for k in range(100)]) im_gray = im_gray.</description>
    </item>
    
    <item>
      <title>[Python] Image registration: From SIFT to deep learning</title>
      <link>https://memotut.com/9598cbac5/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/9598cbac5/</guid>
      <description>## Overview  There are few Japanese articles about image registration (as of January 22, 2020), so I thought it was very easy to understand Image Registration: From SIFT to Deep Learning was translated or summarized. Some parts have been omitted or added, so please read the original article if you want to get the original text.
Source code
What is image registration? Image registration is the process of correcting the misalignment between two images.</description>
    </item>
    
    <item>
      <title>[Python] [Python] World Champion Mr. Satan Makeover App Made</title>
      <link>https://memotut.com/216aad85e/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/216aad85e/</guid>
      <description>#Introduction  Everyone&amp;rsquo;s yearning, world champion &amp;ldquo;Mr. Satan&amp;rdquo;. I made an application that can transform into &amp;ldquo;Mr. Satan&amp;rdquo;. Wearing the characteristic eyebrows, beard, and afro hair, you are now &amp;ldquo;Mr. Satan&amp;rdquo;!
Miscellaneous (w)! Technically, the face_recognition library is used to acquire the coordinates of various parts of the face, and the positions and sizes of the eyebrows, whiskers, and afro are calculated and drawn based on them.
What is #face_recognition</description>
    </item>
    
    <item>
      <title>[Python] Judging the loss of Shadowba by image recognition</title>
      <link>https://memotut.com/6bf4e65d2/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/6bf4e65d2/</guid>
      <description>---  This article is a relay article of &amp;ldquo;2020 New Year Advent Calendar TechConnect!&amp;ldquo;ofLinkInformationSystem is. TechConnect! is a self-starting advent calendar relayed by a self-made group called engineer.hanzomon. (From [Link here] Facebook)
 Since the theme was free, it will be a free article. (The technique used is serious.) I made good use of the tutorial and did image recognition.
Done A program to detect Win/Lose of Shadowverse (Steam version) has been created.</description>
    </item>
    
    <item>
      <title>[Python] Can AI distinguish Carlos Ghosn and Mr. Bean (Face recognition using face landmark)</title>
      <link>https://memotut.com/d1b29fe29/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/d1b29fe29/</guid>
      <description>#Introduction  The news is about the news that Carlos Ghosn, the former chairman of Nissan Motor Co., Ltd., broke bail conditions and traveled to Lebanon. I&amp;rsquo;ve been thinking for a long time, but it&amp;rsquo;s similar to Mr. Bean&amp;hellip; Left: [Carlos Ghosn](https://www.google.com/search?q=Carlos+Ghosn&amp;amp;sxsrf=ACYBGNS1gsNQxqfqi7GRWUUeSSZ6CRix8w:1577813710879&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;Ah&amp;amp;EqjQAQBQ&amp;amp;QAQBQBQ&amp;amp;QAQBQ&amp;amp;QB Right: [Mr. Bean (Rowan Atkinson)](https://www.google.com/search?q=rowan+atkinson&amp;amp;biw=1386&amp;amp;bih=710&amp;amp;sxsrf=ACYBGNTsdddnLF7jgPr9RTePeEMGgREpyA:1577813660092&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;saQ&amp;amp;isch&amp;amp;saq
It was a year-end and New Year holiday, so I made a little classifier using a neural network. If you google it, a lot of images of the two people will appear, so it was good for CNN, but This time, as another approach, I would like to perform classification based on the position of landmarks on the face.</description>
    </item>
    
    <item>
      <title>[Python] Judgment of backlight image using OpenCV</title>
      <link>https://memotut.com/2aa08a102/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/2aa08a102/</guid>
      <description>## Introduction  Hello, My name is Kano. At ABEJA, I am in charge of customer support for Insight for Retail, a retail service.
Recently, I am living a vegan life under the influence of a documentary called Game Changer that I watched on Netflix. However, I sometimes eat Jiro, family, or cottery ramen, so I can&amp;rsquo;t lose weight.
I&amp;rsquo;m not an engineer, but I will do my best to write it.</description>
    </item>
    
    <item>
      <title>[Python] Get started with object detection lightly</title>
      <link>https://memotut.com/c16cd67ce/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/c16cd67ce/</guid>
      <description>This article is the 15th day article of [Kinki University Advent Calendar 2019](https://qiita.com/advent-calendar/2019/kindai).  In this article, I will write about object detection roughly. It is written with reference to the contents of the survey paper &amp;ldquo;Object Detection in 20 Years: A Survey&amp;rdquo;.
1. What is Object Detection? Object detection is the task of detecting instances of classes and semantic objects in images and videos. In the old days, it was a difficult task to get accuracy because there are two kinds of guidelines, classify and semantic.</description>
    </item>
    
    <item>
      <title>[Python] I tried to make a program that solves the mistake search in seconds</title>
      <link>https://memotut.com/3be8b0529/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/3be8b0529/</guid>
      <description>[Fujitsu Systems Web Technology Advent Calendar 2019](https://qiita.com/advent-calendar/2019/fsweb) This is the 16th day post.  All content in the article is the personal opinion, and the content of the writing is the author&amp;rsquo;s own responsibility. It does not matter which organization you belong to.
#Introduction This time on the 16th day, I am familiar as I have never cleared the search for mistakes of Saizeria
A program that can display the difference between two images and display the difference easily and easily</description>
    </item>
    
    <item>
      <title>[Python] Wear Instagram</title>
      <link>https://memotut.com/3d933abc6/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/3d933abc6/</guid>
      <description>What kind of photos do you post when you post photos on instagram? [^1]  I think that SNS for showing to others, it is easy to unconsciously produce a fulfilling self **. Maybe that&amp;rsquo;s what your actions are tied to ** your SNS&amp;rsquo;s past posts?
I would like to express such a situation.
 This article is Keio SFC Tokui Lab (Computational Creativity Lab.) Also serves as a commentary on the summer camp 2019 hackathon</description>
    </item>
    
    <item>
      <title>[Python] I got an error when I put opencv in python3 with Raspberry [Workaround]</title>
      <link>https://memotut.com/48463fd91/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/48463fd91/</guid>
      <description>I couldn&#39;t install and uninstall opencv well, so I was able to install it somehow, so I will write the history.  Error situation pi@raspberrypi:~ $python3 Python 3.7.3 (default, Apr 3 2019, 05:39:12) [GCC 8.2.0] on linux Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information. &amp;gt;&amp;gt;&amp;gt; import cv2 Traceback (most recent call last): File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt; File &amp;quot;/home/pi/cv2/__init__.py&amp;quot;, line 3, in &amp;lt;module&amp;gt; from .cv2 import * ImportError: /home/pi/cv2/cv2.</description>
    </item>
    
    <item>
      <title>[Python] Convert image data to JSON with Python and send/receive it over the network</title>
      <link>https://memotut.com/8da21f52e/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/8da21f52e/</guid>
      <description>#Introduction  Because I wrote a code several times to send the image taken with the Web camera to another server running the face detection model etc. via HTTP communication, make a note of it. In the sample code, the sending side sends images taken from the webcam to the server at regular intervals, the receiving side detects faces and draws a box, and then saves the image file locally.</description>
    </item>
    
    <item>
      <title>[Python] Head direction estimation using Python and OpenCV&#43;dlib</title>
      <link>https://memotut.com/1e68a7572/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/1e68a7572/</guid>
      <description>#Head direction estimation?  Head direction estimation, or Head Pose Estimation in English. It is an algorithm that estimates the direction of the face and the inclination of the head from the input image information and facial feature amount data. Recently, it is widely used for Vtuber development.
Head direction estimation method Qiita has already introduced several methods for estimating the head direction. This is very well summarized in the Qiita article.</description>
    </item>
    
    <item>
      <title>[Python] I saw you not working</title>
      <link>https://memotut.com/d52204b8c/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/d52204b8c/</guid>
      <description>#Introduction  There are people who smash without working in a club activity, so it is a story that I can always see the state of the club room. With OpenCV and WebSocket, I was able to easily create what I could see in real time. I will leave it.
Operating environment CentOS Linux release 7.5.1804 Python 3.6.8 Logitech Webcam C270
Implementation Install the following
pip install opencv-python pip install flask pip install gevent pip install gevent-websocket Directory structure ├ main.</description>
    </item>
    
    <item>
      <title>[Python] I tried to detect face landmarks easily with python and dlib</title>
      <link>https://memotut.com/bbc580511/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/bbc580511/</guid>
      <description>#Introduction  When I was a student, I was doing research on facial landmark detection while talking about it. I was amazed at how incredibly easy it is now.
So I would like to actually try it. If you would like to implement it for the time being, please read from &amp;ldquo;Easy face landmark detection&amp;rdquo;.
About face landmark detection method It seems that there are three main methods for detecting face landmarks.</description>
    </item>
    
    <item>
      <title>[Python] I tried extracting characters from subtitles (OpenCV: tesseract-ocr)</title>
      <link>https://memotut.com/112c6c08a/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/112c6c08a/</guid>
      <description>#Introduction  Here, I will try extracting characters from the subtitles that are displayed under the political broadcast. Since there is no background, it seems to be quite binary.
Although it is possible to get the character and the position with considerable accuracy by extracting the character with the google cloud vision API, I will try to get the character by other methods here.
tesseract-ocr / pyocr First, let&amp;rsquo;s recognize characters using tesseract and pyocr.</description>
    </item>
    
    <item>
      <title>[Python] (CMake) Easy installation of official OpenCV in WSL (C/C&#43;&#43;, Python2, Python3)</title>
      <link>https://memotut.com/031a3b41d/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/031a3b41d/</guid>
      <description>Related article: [Easy Windows Subsystem for Linux (WSL) installation procedure](https://qiita.com/kekenonono/items/1ddbb5a1125d496c0010)  #Introduction I have installed the official release of OpenCV 4.1.2 by make on Ubuntu of WSL (Windows Subsystem for Linux), so I will leave it as a memorandum.
The target is for those who want to use OpenCV in C++. I will install it so that it can be used with Python2, Python3, but if you want to use only Python, it seems easy to put in opencv-python.</description>
    </item>
    
    <item>
      <title>[Python] Recognize the board surface of Othello board with OpenCV</title>
      <link>https://memotut.com/fe6b95ae9/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/fe6b95ae9/</guid>
      <description>#Introduction  This year, Othello Advent Calendar was planned and invited, so I decided to write an article. Actually, I wrote another article on Day 1, but I didn&amp;rsquo;t know what I was doing and I suddenly entered the article, so this time It is a little self-introduction.
I&amp;rsquo;m developing an app for iOS called Goki Box. As one of its functions, we have incorporated a function that images the Othello board with a camera and overlays the evaluation value on the board with AR.</description>
    </item>
    
    <item>
      <title>[Python] I tried to detect moving objects quickly with OpenCV</title>
      <link>https://memotut.com/4eed79a7d/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/4eed79a7d/</guid>
      <description>The articles about OpenCV and Raspberry Pi, which I wrote a long time ago, have started to be read by everyone again recently. I think that you are referring to it because it is a keyword related to the recent trends of &amp;quot;deep learning&amp;quot; and &amp;quot;edge computing&amp;quot;. When I suddenly think about the scenes where edge computing is used, I feel that I often see cases of motion detection with cameras.</description>
    </item>
    
    <item>
      <title>[Python] Face detection of animation with OpenCV</title>
      <link>https://memotut.com/fda37ac4f/</link>
      <pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/fda37ac4f/</guid>
      <description>https://github.com/opencv/opencv  Preparation ・Enable import cv2 ・Enable to read feature files
See here How to set up development environment of OpenCV 3 + Python 2/3 on Mac OS X
Classifier creation and face position detection import os import cv2 # Create a classifier based on the feature file classifier = cv2.CascadeClassifier(&amp;#39;lbpcascade_animeface.xml&amp;#39;) # Face detection image = cv2.imread(&amp;#39;newGame.jpg&amp;#39;) # Grayscale speeds up processing gray_image = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY) faces = classifier.detectMultiScale(gray_image) Confirm that the positions and sizes of the faces of 6 people can be detected with print(faces).</description>
    </item>
    
    <item>
      <title>[Python] [OpenCV; Python] Summary of findcontours function</title>
      <link>https://memotut.com/fd3d89496/</link>
      <pubDate>Mon, 28 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/fd3d89496/</guid>
      <description>I couldn&#39;t find any more detailed explanation about findcontours for Python version of OpenCV on the internet, so I&#39;d like to note that I tried it myself. If you made a mistake, please point it out.  #findcontours function When you want to extract the contours of an image with OpenCV, use the function findContours. The first argument is the input image, the second argument is the extraction mode, and the third argument is the approximation method.</description>
    </item>
    
    <item>
      <title>[Python] Try separating the background and the moving body of the video with OpenCV</title>
      <link>https://memotut.com/f9d4d6b81/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/f9d4d6b81/</guid>
      <description>#Introduction  OpenCV (Open Source Computer Vision Library) is a collection of video/image processing libraries licensed under BSD. There are many algorithms for image filtering, template matching, object recognition, video analysis, machine learning, etc.
Example of moving body tracking using OpenCV (OpenCV Google Summer of Code 2015) https://www.youtube.com/watch?v=OUbUFn71S4s
Click here for installation and easy usage Install OpenCV 3 (core + contrib) in Python 3 environment &amp;amp; Difference between OpenCV 2 and OpenCV 3 &amp;amp; simple operation check</description>
    </item>
    
    <item>
      <title>[Python] How to make face image data set used in machine learning (2: Frame analysis of moving image and acquisition of candidate image)</title>
      <link>https://memotut.com/fdfe836e7/</link>
      <pubDate>Sat, 21 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/fdfe836e7/</guid>
      <description>[Last time](http://qiita.com/ligerbolt/items/aeaa88980030fba940b6) introduced how to collect candidate images using Bing Image Search API.  This time, I will introduce a method of frame analysis and collection of videos.
Development environment used this time  MacOS X El Capitan 10.11.4 Python 3.5 OpenCV 3.1  Merits of extracting candidate images from videos The video basically uses the same mechanism as flipbook comics, and still images are switched within a short time to express movement.</description>
    </item>
    
    <item>
      <title>[Python] OpenCV Basic Study with Python</title>
      <link>https://memotut.com/fb664c66f/</link>
      <pubDate>Fri, 22 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/fb664c66f/</guid>
      <description># Outline   Creating an environment   Image generation Image loading Average value of image colors Fiddle with pixels Trimming Resize Addition Affine transformation Flip Grayscale conversion Use Circle drawing function. Color extraction Replace color channel Alpha channel operation * On the way  Creating an environment Yes I have to study image processing properly. .. ! That&amp;rsquo;s openCV! I thought, Having an environment to play with openCV is a challenge.</description>
    </item>
    
    <item>
      <title>[Python] Must see OpenCV-Python Tutorials</title>
      <link>https://memotut.com/facf9e6cf/</link>
      <pubDate>Sat, 21 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/facf9e6cf/</guid>
      <description>The &amp;quot;OpenCV-Python Tutorial Document&amp;quot; site is up.  [Welcome to the OpenCV-Python tutorial documentation page!] (http://labs.eecs.tottori-u.ac.jp/sd/Member/oyamada/OpenCV/html/index.html)
Please use the above site to read the complete translation. The following translations are inadequate as translations, and their comparison with related python libraries is somewhat unique.
 OpenCV-Python Tutorials of OpenCV 3.2 http://docs.opencv.org/3.2.0/d9/df8/tutorial_root.html It is published in. (The accuracy of Google Translate has improved recently, so it may be enough to try Google Translate rather than reading this article.</description>
    </item>
    
    <item>
      <title>[Python] I tried to make an image similarity function with Python &#43; OpenCV</title>
      <link>https://memotut.com/fcb93ab4b/</link>
      <pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/fcb93ab4b/</guid>
      <description>## Overview  A memo when I made a function to compare a certain image with multiple images with a grayscale histogram in Python
Environment   Python 2.7.9
  Pyenv anaconda-2.1.0
  opencv 2.4.8 (installed with conda)
  Implementation import cv2 def matching(self): im = cv2.imread(&amp;#39;/to/image/path/image.jpg&amp;#39;, cv2.IMREAD_GRAYSCALE) # ImageFile to compare image_hist = cv2.calcHist([im], [0], None, [256], [0, 256]) target = self.compare_target_hist(image_hist) result = [] while True: try: result.</description>
    </item>
    
    <item>
      <title>[Python] Build OpenCV3 &amp; Python3 environment on Ubuntu</title>
      <link>https://memotut.com/f8922ed39/</link>
      <pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/f8922ed39/</guid>
      <description># Build environment with Ubuntu  The standard package is only for Python2, so prepare it yourself. It seems that there is a problem with cmake&amp;rsquo;s detection process of Python 3.4, and it did not work easily, so make a memorandum.
Target environment  cmake can&amp;rsquo;t get python3 library path and target opencv_python3 becomes unavailable (I think ubuntu 14.04 can&amp;rsquo;t detect python3)  It&amp;rsquo;s relatively easy to do in a windows environment, but I never thought that Ubuntu would be such a pain.</description>
    </item>
    
  </channel>
</rss>