<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> high speed on Memo Tut</title>
    <link>https://memotut.com/tags/high-speed/</link>
    <description>Recent content in  high speed on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/high-speed/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Don&#39;t write Python if you want to speed it up</title>
      <link>https://memotut.com/dont-write-python-if-you-want-to-speed-it-up-1c2c2/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/dont-write-python-if-you-want-to-speed-it-up-1c2c2/</guid>
      <description>## Introduction  I decided to give a Lightning Talk about Python at work, so I&amp;rsquo;ll write something that can be read in about 5 minutes. The talk theme is &amp;ldquo;Knowledge when trying to speed up in Python&amp;rdquo;. **This isn&amp;rsquo;t an article about Python. **
Target of this article This article is for the following people:
 Python beginner People who are interested in Python but think that it seems not to be speed  Immediate conclusion As the title says, don&amp;rsquo;t write Python (as much as possible) if you want to speed it up.</description>
    </item>
    
    <item>
      <title>[Python] Summarize the amount of calculation of collection type (list/tuple/dictionary/set) according to usage for speeding up python</title>
      <link>https://memotut.com/summarize-the-amount-of-calculation-of-collection-type-list-tuple-dictionary-set-according-to-usage-for-speeding-up-python-4ab87/</link>
      <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/summarize-the-amount-of-calculation-of-collection-type-list-tuple-dictionary-set-according-to-usage-for-speeding-up-python-4ab87/</guid>
      <description>It is the 6th day of [Python Part 2 Advent Calendar 2019](https://qiita.com/advent-calendar/2019/python2).Yesterdaywas[bluepost59-san](https://qiita.com/bluepost59)&#39;s[Introduction](https://qiita.com/bluepost59/items/48198ac6600543bf2459). A comprehensive list of comprehension notation patterns useful for speeding up was introduced.  This article is also aimed at speeding up. In order to organize the performance of more basic processing, I would like to summarize the calculation amount of python&amp;rsquo;s collection type (list/tuple/dictionary/set) by usage.
The following is a detailed article that summarizes the calculation amount for each collection type.</description>
    </item>
    
  </channel>
</rss>