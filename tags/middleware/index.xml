<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>middleware on Some Title</title>
    <link>https://japan2018.github.io/tags/middleware/</link>
    <description>Recent content in middleware on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/middleware/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I made Django&#39;s Middleware and made it possible to access request information from anywhere</title>
      <link>https://japan2018.github.io/i-made-djangos-middleware-and-made-it-possible-to-access-request-information-from-anywhere-fab9f/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/i-made-djangos-middleware-and-made-it-possible-to-access-request-information-from-anywhere-fab9f/</guid>
      <description>I started thinking about whether the login user could be stored in the user_created (creator) and user_updated (updater) of the model by common processing.  Until then, I wrote the process to pass user information from view to form and store it in user_created or user_updated.
What is Django middleware? From Official
 Middleware is a framework for adding hooks to Django&amp;rsquo;s request/response handling.
 You can define the process to be performed when sending a request or before returning a response.</description>
    </item>
    
  </channel>
</rss>