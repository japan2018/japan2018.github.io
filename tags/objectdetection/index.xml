<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ObjectDetection on Some Title</title>
    <link>https://japan2018.github.io/tags/objectdetection/</link>
    <description>Recent content in ObjectDetection on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/objectdetection/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Computer Vision : Object Detection - Non Maximum Suppression</title>
      <link>https://japan2018.github.io/computer-vision-object-detection-non-maximum-suppression-fbf3b/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/computer-vision-object-detection-non-maximum-suppression-fbf3b/</guid>
      <description>#Target  Implement Non Maximum Suppression used in object detection.
#Introduction This section introduces Intersection over Union and Non Maximum Suppression used in Computer Vision: Object Detection Part2-Single Shot Multi Detector.
##Non Maximum Suppression (NMS) In object detection, multiple candidate regions that are presumed to exist may be obtained for one recognized object, as shown in the figure below.
The part surrounded by the colored rectangle indicates the candidate area, and the display at the upper left of each candidate area indicates the category and the certainty factor of the object existing in that candidate area.</description>
    </item>
    
    <item>
      <title>Computer Vision : Object Detection Part1 - Bounding Box preprocessing</title>
      <link>https://japan2018.github.io/computer-vision-object-detection-part1-bounding-box-preprocessing-f94eb/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/computer-vision-object-detection-part1-bounding-box-preprocessing-f94eb/</guid>
      <description>#Target  Summary of object detection using Microsoft Cognitive Toolkit (CNTK).
Part 1 prepares for object detection using Microsoft Cognitive Toolkit. As a training data set for object detection, Microsoft Common Objects in Context (COCO) provided by Microsoft is used.
We will introduce them in the following order.
 Object detection by neural network Pretreatment of bounding box Dimension Clustering for creating Anchor Box Create a file to be read by the built-in reader provided by CNTK  #Introduction</description>
    </item>
    
  </channel>
</rss>