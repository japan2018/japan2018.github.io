<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> api on Some Title</title>
    <link>https://japan2018.github.io/tags/api/</link>
    <description>Recent content in  api on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hit the ISE ERS API with PowerShell</title>
      <link>https://japan2018.github.io/hit-the-ise-ers-api-with-powershell-ff856/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/hit-the-ise-ers-api-with-powershell-ff856/</guid>
      <description>#Introduction  If you want to operate the API easily, I think that you often use cURL, Postman, HTTP Client provided in various programming languages, etc., but there are cases where such an environment cannot be prepared due to various restrictions. Is it not?
In this post, we will introduce the API of Cisco Identity Services Engine (ISE) as a minimum to operate the REST API with a Windows terminal (PowerShell).</description>
    </item>
    
    <item>
      <title>Get pdf and png from Tableau server using TSC (Tableau Server Client).</title>
      <link>https://japan2018.github.io/get-pdf-and-png-from-tableau-server-using-tsc-tableau-server-client.-fb1bd/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/get-pdf-and-png-from-tableau-server-using-tsc-tableau-server-client.-fb1bd/</guid>
      <description># Introduction  Use python 3.8.0. TSC requires installation. github (https://github.com/tableau/server-client-python) PyPI (https://pypi.org/project/tableauserverclient/)
pip install tableauserverclient import tableauserverclient as TSC For username, password, siteid, serverurl enter the account and server information used. Also, I want to use the latest version, so I set the user_server_version option to True.
tableau_auth = TSC.TableauAuth(&amp;#39;username&amp;#39;,&amp;#39;password&amp;#39;,&amp;#39;siteid&amp;#39;) server = TSC.Server(&amp;#39;serverurl&amp;#39;, use_server_version=True) Run the following code to see if the view exists on your site. Also, be sure to execute all_views because it will be used later.</description>
    </item>
    
    <item>
      <title>C language to see and remember Part 5 Call C language from Python (argument) array</title>
      <link>https://japan2018.github.io/c-language-to-see-and-remember-part-5-call-c-language-from-python-argument-array-fdd3d/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/c-language-to-see-and-remember-part-5-call-c-language-from-python-argument-array-fdd3d/</guid>
      <description>Pythonからfloatの配列を渡し、タプルで合計と平均を返す。  import myModule as capi import random x=[random.uniform(0, 100) for x in range(100)] s=0.0 for a in x: s=s+a print(&amp;#34;c &amp;#34;,s,s/len(x)) a=capi.fsum_avr(x) print(&amp;#34;py&amp;#34;,a) 実行すると &amp;gt;python capi.py py 5025.24247203747 50.252424720374705 c (5025.24247203747, 50.252424720374705) #include &amp;lt;Python.h&amp;gt;static PyObject* fsum_avr(PyObject* self, PyObject* args) { long n; double sum=0.0,avr,a; PyObject* c_list, *item; if (!PyArg_ParseTuple(args, &amp;#34;O&amp;#34;, &amp;amp;c_list)) return NULL; // Check list  if PyList_Check(c_list) n = PyList_Size(c_list); else return NULL; for (int i = 0; i &amp;lt; n; i++){ item = PyList_GetItem(c_list, i); a = PyFloat_AsDouble(item); // Increment the reference count  sum = sum + a; Py_DECREF(item); // Decrement the reference count  } avr=sum/n; return Py_BuildValue(&amp;#34;(dd)&amp;#34;,sum,avr); } static PyMethodDef myMethods[] = { { &amp;#34;fsum_avr&amp;#34;,fsum_avr, METH_VARARGS, &amp;#34;sum avr&amp;#34;}, { NULL } }; static struct PyModuleDef myModule = { PyModuleDef_HEAD_INIT,&amp;#34;myModule&amp;#34;,&amp;#34;C API Module&amp;#34;,-1,myMethods }; PyMODINIT_FUNC PyInit_myModule(void){ return PyModule_Create(&amp;amp;myModule); } 注目ポイント 1.</description>
    </item>
    
    <item>
      <title>10 questions to check before web scraping</title>
      <link>https://japan2018.github.io/10-questions-to-check-before-web-scraping-ff0ca/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/10-questions-to-check-before-web-scraping-ff0ca/</guid>
      <description>With [Web scraping](https://www.octoparse.jp/), you can get the information you need in seconds and the great value behind it. But before we do that, there are 10 questions to ask.  #1.Is Web scraping illegal?
[robot.txt](https://en.wikipedia.org/wiki/Robots_exclusion_standard If you are allowed to crawl according to the terms of the file, we recommend that you read the Terms of Service (ToS) of the target website in advance to assess the legal feasibility of your data project.</description>
    </item>
    
  </channel>
</rss>