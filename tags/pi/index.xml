<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Pi on Memo Tut</title>
    <link>https://memotut.com/tags/pi/</link>
    <description>Recent content in  Pi on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/pi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scatter rice grains to determine pi (Monte Carlo method)</title>
      <link>https://memotut.com/scatter-rice-grains-to-determine-pi-monte-carlo-method-2f147/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/scatter-rice-grains-to-determine-pi-monte-carlo-method-2f147/</guid>
      <description># Addition  This is an article that implements the Monte Carlo method. I forgot completely.
1.First of all When I was reading a book for children&amp;rsquo;s statistics [1], I saw an article about spreading rice grains to calculate the pi. It seemed interesting, so I tried to calculate the pi using the randomly generated x, y coordinate data.
[procedure] It&amp;rsquo;s almost like this
 Prepare a square and a circle inscribed in it.</description>
    </item>
    
    <item>
      <title>[Harlem] There are too many to choose! 13 ways to calculate pi in Python</title>
      <link>https://memotut.com/harlem-there-are-too-many-to-choose-13-ways-to-calculate-pi-in-python-72286/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/harlem-there-are-too-many-to-choose-13-ways-to-calculate-pi-in-python-72286/</guid>
      <description>Hello from the abyss of the universe!  \displaystyle\int {\rm d}\boldsymbol{r}\hat{\psi}^{\dagger}(\boldsymbol{r}) Poppin Friends \hat{\psi}(\boldsymbol{r}) is! This time, I would like to introduce **13 methods of calculating the circle ratio $\pi$ in Python.
In the past, I read the article [&amp;ldquo;I&amp;rsquo;m not worried about pi anymore! 10 ways to find pi&amp;rdquo;]&amp;rdquo; (https://www.procrasist.com/entry/pi_1) (famous in pi region) , The desire to &amp;ldquo;Ï€ seek&amp;rdquo; was amplified, so I came to write this article. And this time, I tried to implement almost all of the method of finding $\pi$ in the article in Python **!</description>
    </item>
    
  </channel>
</rss>