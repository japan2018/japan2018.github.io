<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BigQuery on Memo Tut</title>
    <link>https://memotut.com/tags/bigquery/</link>
    <description>Recent content in BigQuery on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/bigquery/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[BigQuery] How to use BigQuery&#39;s API for Python -Table creation-</title>
      <link>https://memotut.com/bigquery-how-to-use-bigquerys-api-for-python-table-creation-0e00f/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/bigquery-how-to-use-bigquerys-api-for-python-table-creation-0e00f/</guid>
      <description># In line 5   Data scientists usually analyze with Jupyter Therefore, there is a desire to process DB as well on Jupyter Therefore it is more convenient to use BigQuery on Jupyter via library instead of WebUI or REST API. I decided to investigate the function of the official library google.cloud.bigquery to achieve the above Below is a summary of how to create tables in BigQuery  #Preparation</description>
    </item>
    
    <item>
      <title>I wrote Python code to create a dependency diagram (Plant UML) of table (view) from SQL</title>
      <link>https://memotut.com/i-wrote-python-code-to-create-a-dependency-diagram-plant-uml-of-table-view-from-sql-ef4d2/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/i-wrote-python-code-to-create-a-dependency-diagram-plant-uml-of-table-view-from-sql-ef4d2/</guid>
      <description># What is this?  A table(view) dependency diagram like this&amp;hellip;
â†“ It is a story that I wrote the Python code to output from the SQL group like this. (Plant UML was used to create the diagram)
CREATE TABLE `project.dataset.table5` AS SELECT * FROM `project.dataset.table1`; CREATE TABLE IF NOT EXISTS `project.dataset.table6` AS SELECT * FROM `project.dataset.table2` UNION ALL SELECT * FROM `project.dataset.table3`; CREATE VIEW `project.dataset.table7` AS SELECT * FROM `project.</description>
    </item>
    
  </channel>
</rss>