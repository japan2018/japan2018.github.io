<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphviz on Some Title</title>
    <link>https://japan2018.github.io/tags/graphviz/</link>
    <description>Recent content in Graphviz on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/graphviz/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Visualize Go&#39;s internal package relationships for each commit</title>
      <link>https://japan2018.github.io/visualize-gos-internal-package-relationships-for-each-commit-fe077/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/visualize-gos-internal-package-relationships-for-each-commit-fe077/</guid>
      <description>![call-aimation.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/479931/3ec1a7e5-ce6a-92cd-0a86-8ace5e944941.gif)  Program used: bxcodec/go-clean-arch
Overview  It is difficult to understand programs that have complicated Go internal package relationships.   I want to visualize Since it&amp;rsquo;s a big deal, I visualize it for each commit and make it an animation  #Preparation
 Go Python3 Graphviz ImageMagick  #Code
 st34-satoshi/for-each-commit  What you did  Get the commit log Execute command for each commit Output the internal package relations of Go to dot faril and create a gif Align the gif size for each commit and create an animation  1.</description>
    </item>
    
  </channel>
</rss>