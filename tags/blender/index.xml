<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blender on Memo Tut</title>
    <link>https://memotut.com/tags/blender/</link>
    <description>Recent content in Blender on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/blender/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Generate physically robust shapes with GAN and print on a 3D printer</title>
      <link>https://memotut.com/9f17c37a1/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/9f17c37a1/</guid>
      <description># 0. What makes me happy about this article   You can see the flow of printing the data generated by deep learning on a 3D printer (10. In the experimental code, I have posted it to GitHub for all the codes **. The same thing can be done if you make an environment by git clone It should be easy.I wrote in herehowtocreatetheenvironment.) It becomes a study of material mechanics (I am writing while studying&amp;hellip;) Learn how TensorFlow 2.</description>
    </item>
    
    <item>
      <title>[Python] I tried to introduce python script of blender _ Part 02</title>
      <link>https://memotut.com/705177504/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/705177504/</guid>
      <description># To write the continuation three years later...   Introduction to blender python script_01  I have had the opportunity to touch Blender&amp;rsquo;s Python console three years ago, and for the first time in three years, so I&amp;rsquo;ll write more.
Blender version Blender 2.8.1a: It looks like there have been major UI and API changes.
Debug environment on Blender The layout is as follows.
I have placed a Python Editor in the lower right of the Text Editor in the lower left of the figure display.</description>
    </item>
    
    <item>
      <title>[Python] [Blender] Complement Blender&#39;s Python API with a text editor</title>
      <link>https://memotut.com/5ef0d80f4/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/5ef0d80f4/</guid>
      <description>This is the 23rd day article of [Blender Advent Calendar 2019](https://qiita.com/advent-calendar/2019/blender).  When creating Blender scripts and add-ons, you will often edit the source code using a text editor. One of the advantages of using a text editor is the efficiency of development by the code completion function, but as part of the Python API provided by Blender is provided as binary data instead of Python source code, it remains as is.</description>
    </item>
    
    <item>
      <title>[Python] Do Blender Add-on Tutorial with Hy</title>
      <link>https://memotut.com/e0c758a35/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/e0c758a35/</guid>
      <description>This article is the 8th day article from [Lisp Advent Carendar 2019](https://qiita.com/advent-calendar/2019/lisp).  Summary of this article Using Hy, a Clojure-like Lisp dialect running on Python, let&amp;rsquo;s create an Add-on for the DCC tool Blender.
  Hy -Documents -GitHub repository
  Blender -https://www.blender.org -Blender 2.81 Reference Manual -Blender 2.81 Python API Documentation
  Target audience  People who want to do what they do in Python with Lisp People who want to play with Blender in Lisp  Environment The following is for Windows 10.</description>
    </item>
    
    <item>
      <title>[Python] Create a devilish picture with Blender script</title>
      <link>https://memotut.com/df2edd27a/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/df2edd27a/</guid>
      <description>** * Blender version is 2.80 **  Certain modeling in Blender can be catastrophically reduced in time using Python scripts. The task of arranging a large number of objects is the most important. I will give an example.
Arrange simple shapes â–½ Arrange primitives (simple figures).
Split the window and press Shift+F11 with the cursor on one side, as shown below.
Press &amp;ldquo;New&amp;rdquo; to create a new script.
Copy and paste the following text.</description>
    </item>
    
  </channel>
</rss>