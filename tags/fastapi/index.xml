<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FastAPI on Some Title</title>
    <link>https://japan2018.github.io/tags/fastapi/</link>
    <description>Recent content in FastAPI on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/fastapi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build a lightweight FastAPI development environment using Docker</title>
      <link>https://japan2018.github.io/build-a-lightweight-fastapi-development-environment-using-docker-fcd38/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/build-a-lightweight-fastapi-development-environment-using-docker-fcd38/</guid>
      <description>## Introduction  I often use FastAPI recently, and I wanted to quickly build it with Docker and dispose of it. As a memo, I&amp;rsquo;d like to leave a lightweight construction method.
Preparation  Environment that can use Docker and Docker Compose  $ docker --version Docker version 19.03.8, build afacb8b7f0  The file structure looks like this  . ├── Dockerfile ├── docker-compose.yml ├── main.py └── requirements.txt Source You can clone from here https://github.</description>
    </item>
    
    <item>
      <title>Create a clean DB for testing with FastAPI and perform unit test of API with pytest</title>
      <link>https://japan2018.github.io/create-a-clean-db-for-testing-with-fastapi-and-perform-unit-test-of-api-with-pytest-ff9c8/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/create-a-clean-db-for-testing-with-fastapi-and-perform-unit-test-of-api-with-pytest-ff9c8/</guid>
      <description>## things to do   implementation of a simple CRUD application using sqlite3 with FastAPI [Create a DB for each test case and perform unit test of API with pytest without affecting other test cases or production DB](#CreateaDBforeachtestcaseandcreateanothertestcase(UnittestofAPIisperformedwithpytestwithoutaffectingtheproductionDB.)  1. Implementing a simple CRUD application using sqlite3 with FastAPI CRUD application Create a CRUD app for user account. Since the test method is mainly introduced, only the following simple functions will be implemented.</description>
    </item>
    
  </channel>
</rss>