<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> parallel processing on Memo Tut</title>
    <link>https://memotut.com/tags/parallel-processing/</link>
    <description>Recent content in  parallel processing on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/parallel-processing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Python distributed parallel processing with Ray</title>
      <link>https://memotut.com/introduction-to-python-distributed-parallel-processing-with-ray-603bb/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/introduction-to-python-distributed-parallel-processing-with-ray-603bb/</guid>
      <description>## What is Ray  Ray is a framework for writing distributed parallel processing in Python at high speed and simply, and it is also designed to easily parallelize existing code. By using Ray, you can easily describe process level parallel processing compared to multiprocessing.
This article is based on the contents of Ray Tutorial, The code is confirmed to work on Python 3.8.2, Ray 0.8.4.
Install You can install it with pip etc.</description>
    </item>
    
    <item>
      <title>Multiprocess with asynchronous processing in python</title>
      <link>https://memotut.com/multiprocess-with-asynchronous-processing-in-python-80b91/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/multiprocess-with-asynchronous-processing-in-python-80b91/</guid>
      <description># What is this article?  I just wanted to write code because I wanted to make python faster. #What did you want to do My scientific calculations are slow. Both CPU processing and io are slow. Now, there are various speedups in the street.
 multiprocess multithread Asynchronous processing  In the case of python, it seems that multithread is not fast due to GIL, so Inevitably it becomes multiprocess and asynchronous processing.</description>
    </item>
    
    <item>
      <title>I searched GIL as much as possible to know if parallel processing in Python</title>
      <link>https://memotut.com/i-searched-gil-as-much-as-possible-to-know-if-parallel-processing-in-python-5e1d5/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/i-searched-gil-as-much-as-possible-to-know-if-parallel-processing-in-python-5e1d5/</guid>
      <description>Recently I had the opportunity to write an orchestration layer (BFF) application in Python.  Although asyncio was introduced from Python 3.4, I/O bound processing can be handled efficiently even with a single thread, but since GIL still exists for CPU bound processing, parallel processing is possible under a single process. It is limited.
From this, it can be seen as a language characteristic that it is more suitable for handling multiple I/O bound processes than CPU bound processes.</description>
    </item>
    
  </channel>
</rss>