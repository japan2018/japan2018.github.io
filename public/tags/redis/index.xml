<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on Memo Tut</title>
    <link>https://memotut.com/tags/redis/</link>
    <description>Recent content in Redis on Memo Tut</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://memotut.com/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Python] Knowledge base &#43; Web API operated by NoSQL x PaaS</title>
      <link>https://memotut.com/c4f315f91/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/c4f315f91/</guid>
      <description># What is this  It is a summary of know-how when building a knowledge base + Web API with NoSQL and PaaS.
When implementing an architecture called string tag oriented undirected graph type knowledge base, An example built with Heroku + Redis + FastAPI, Here is an example built with AWS(DynamoDB + Lambda + API Gateway).
All the code parts use Python3.8.0.
*Currently the AWS edition is incomplete. sorry.</description>
    </item>
    
    <item>
      <title>[Python] Asynchronous processing implementation in Django (Celery, Redis)</title>
      <link>https://memotut.com/ded69dfa5/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/ded69dfa5/</guid>
      <description>#About this article  I think that asynchronous processing is essential when creating a web application with Django, and I would like to introduce its introduction with examples. The software to use is Celery(celery), ・About asynchronous processing by django+Celery ・How to implement asynchronous processing with Django I implemented it by referring to the article around here.
##environment ・Python 3.6.8 ・Django 2.2.7 ・CentOS7
What is asynchronous processing? Actually, I didn&amp;rsquo;t even know the word asynchronous processing until I actually encountered the problem.</description>
    </item>
    
    <item>
      <title>[Python] Set Expire to Redis key at once</title>
      <link>https://memotut.com/ff459461a/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://memotut.com/ff459461a/</guid>
      <description>#Introduction  It is a method to add Expire collectively when the number of Redis keys increases too much.
Please note the following:
 Process multiple pipelines simultaneously Sleep several seconds after processing multiple records to avoid overloading Redis Disperse the expire time so that the load due to key deletion is not applied  Get a list of keys you want to expire save the data obtained with keys to a file</description>
    </item>
    
  </channel>
</rss>