<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> AI on Some Title</title>
    <link>https://japan2018.github.io/tags/ai/</link>
    <description>Recent content in  AI on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reinforcement Learning: Speed up Value Iteration</title>
      <link>https://japan2018.github.io/reinforcement-learning-speed-up-value-iteration-fe140/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/reinforcement-learning-speed-up-value-iteration-fe140/</guid>
      <description>#Introduction  In recent years, the field of model-free deep reinforcement learning has been actively studied due to the success of AlphaGo and DQN. These algorithms are one of the effective approaches when the state-action space is very large or when mathematical modeling of dynamics is difficult. However, in many of the problems encountered in reality, mathematical modeling of the environment is relatively easy, and the state-action space can be reduced by devising it in many cases.</description>
    </item>
    
    <item>
      <title>AI Product Development Team Reading Party: [INSPIRED Product Management that Creates Enthusiastic Products]</title>
      <link>https://japan2018.github.io/ai-product-development-team-reading-party-inspired-product-management-that-creates-enthusiastic-products-fb315/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/ai-product-development-team-reading-party-inspired-product-management-that-creates-enthusiastic-products-fb315/</guid>
      <description>In this post, I will introduce the management method and contents of the reading event held by the &amp;quot;AI Product Development Team&amp;quot; that I lead.  The books targeted at this reading party are ** [INSPIRED Product management that creates enthusiastic products] ** https://www.amazon.co.jp/dp/B0814STTHV/
is.
In Japanese, it is translated as &amp;ldquo;Product Management that creates enthusiasm products,&amp;rdquo; but in English How to Create Tech Products Customers Love is.
How to make a loved product.</description>
    </item>
    
    <item>
      <title>[Linear regression] Number of explanatory variables and coefficient of determination (adjusted for degrees of freedom)</title>
      <link>https://japan2018.github.io/linear-regression-number-of-explanatory-variables-and-coefficient-of-determination-adjusted-for-degrees-of-freedom-fab7d/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/linear-regression-number-of-explanatory-variables-and-coefficient-of-determination-adjusted-for-degrees-of-freedom-fab7d/</guid>
      <description># at first  For the explanatory variables of linear regression, &amp;ldquo;It is better not to use variables unrelated to the objective variable for learning&amp;rdquo; (*1) I have the image. However, while studying linear regression analysis, I have learned that the coefficient of determination has the following properties.
&amp;ldquo;When an explanatory variable is added, the coefficient of determination cannot fall below that before addition. (So, for accuracy comparison of models with different numbers of explanatory variables, use the &amp;ldquo;coefficient of determination with adjusted degrees of freedom&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Predict from various data in Python using Facebook Prophet, a time series prediction tool</title>
      <link>https://japan2018.github.io/predict-from-various-data-in-python-using-facebook-prophet-a-time-series-prediction-tool-f8a74/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/predict-from-various-data-in-python-using-facebook-prophet-a-time-series-prediction-tool-f8a74/</guid>
      <description>&amp;gt;This article is [Greg Rafferty](https://towardsdatascience.com/@raffg?source=post_page-----29810eb57e66----------------------)Translatedfrom&amp;quot;[ForecastinginPythonwithFacebookProphet](https://towardsdatascience.com/forecasting-in-python-with-facebook-prophet-29810eb57e66)&amp;quot; published in November 2019 by Mr. ..  This article is published with the permission of the original author.
I&amp;rsquo;m Greg Rafferty, a data scientist in the Bay Area. You can also check the code used in this project from my github.
In this article, I&amp;rsquo;ll show you how to use the Facebook Prophet prediction library to make a variety of predictions, and some advanced techniques to use your expertise to handle trend inconsistencies.</description>
    </item>
    
    <item>
      <title>Continue making stock price forecasting AI for 10 hours a day Third month</title>
      <link>https://japan2018.github.io/continue-making-stock-price-forecasting-ai-for-10-hours-a-day-third-month-fae42/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/continue-making-stock-price-forecasting-ai-for-10-hours-a-day-third-month-fae42/</guid>
      <description>[Previous previous article: 1st month](https://qiita.com/Lulu_die_Zweite/items/8e5cb713073982353ac3)  Previous article: Second month
Third month By the second month I&amp;rsquo;ve faced quite a few problems. There seems to be a limit to maximizing the prediction accuracy of one AI. Therefore, I came up with a method that may improve the prediction accuracy, so I will write it here.
##AI majority theory The method is simple, first create some good AI, preferably an odd number of AIs.</description>
    </item>
    
    <item>
      <title>Half a year when the Gori Gori literary school almost learned AI</title>
      <link>https://japan2018.github.io/half-a-year-when-the-gori-gori-literary-school-almost-learned-ai-f9988/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/half-a-year-when-the-gori-gori-literary-school-almost-learned-ai-f9988/</guid>
      <description># Half-year when the Gori Gori literary system (deviation value 40 first half) learned AI  Hi, it&amp;rsquo;s a rugged ~~ macho~~ humanities. After graduating from commercial high school, I went to the Faculty of Humanities, so it&amp;rsquo;s different from other humanities. It is a thoroughbred world of humanities.
Although it is a vital math skill, I only studied math A up to high school, and just started math at university.</description>
    </item>
    
    <item>
      <title>Display and analyze only some columns in CASTable</title>
      <link>https://japan2018.github.io/display-and-analyze-only-some-columns-in-castable-fcbe4/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/display-and-analyze-only-some-columns-in-castable-fcbe4/</guid>
      <description>[SAS Viya](https://www.sas.com/ja_jp/software/viya.html)isanAIplatform.ItisavailablethroughlanguagessuchasPython,JavaandR.AtableobjectcalledCASTableisusedinSASViya(CASstandsforCloudAnalyticServices). This time, I will introduce a method to display information by extracting only some columns from CAS Table.  Get table from database First, connect to SAS Viya.
import swat conn = swat.CAS(&amp;#39;server-name.mycompany.com&amp;#39;, 5570,&amp;#39;username&amp;#39;,&amp;#39;password&amp;#39;) Then get the CASTable. This time I use CSV of IRIS data.
tbl = conn.loadtable(&amp;#39;data/iris.csv&amp;#39;, caslib=&amp;#39;casuser&amp;#39;).casTable Get column You can retrieve columns by specifying the key with tbl as a dict.
col = tbl[&amp;#39;sepal_width&amp;#39;] col The output looks like this:</description>
    </item>
    
  </channel>
</rss>