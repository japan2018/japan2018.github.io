<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Summary on Some Title</title>
    <link>https://japan2018.github.io/tags/summary/</link>
    <description>Recent content in  Summary on Some Title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://japan2018.github.io/tags/summary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[The Road to Intermediate Python] Article Link Summary</title>
      <link>https://japan2018.github.io/the-road-to-intermediate-python-article-link-summary-fb3f3/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/the-road-to-intermediate-python-article-link-summary-fb3f3/</guid>
      <description>#Introduction  I need to make better use of Python used in my research, so I will compile my personal writing.
Article link  [Route to Intermediate] Understanding Python Properties [Road to Intermediate] Python seems to be all objects [Road to Intermediate] What are Python&amp;rsquo;s *args and **kwargs?  [Route to Intermediate] Utilizing Python&amp;rsquo;s built-in function vars [Route to Intermediate Python] Dynamically specify execution method by variable name [Road to Intermediate Python] Enable comparison operation of original class [Route to Intermediate Python] Call a class instance with call like a function [Road to Python intermediate] define in in original class [Route to Intermediate Python] Use ternary operator [Path to Intermediate Python] using if statement in list comprehension [Route to Intermediate Python] Use lambda expression [Path to Python Intermediate] Install packages in batch with pip [Route to Intermediate Python] Define getattr function in class  </description>
    </item>
    
    <item>
      <title>Kaggle Related Summary</title>
      <link>https://japan2018.github.io/kaggle-related-summary-fc867/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://japan2018.github.io/kaggle-related-summary-fc867/</guid>
      <description>This is a collection of information that will help you capture Kaggle.  (Will be updated at any time)
▪︎website https://naotaka1128.hatenadiary.jp/entry/kaggle-compe-tips
◼︎ Mechanism Curry&amp;rsquo;s commentary http://www.currypurin.com/entry/2018/02/21/011316
◾️ Book Data Analysis Technology Wins at Kaggle https://www.amazon.co.jp/dp/B07YTDBC3Z/
◾️Booth kaggle tutorial 4th edition https://booth.pm/ja/items/1567594
■ slack https://kaggler-ja.herokuapp.com
■ discord Curry&amp;rsquo;s
■ wiki http://kaggler-ja-wiki.herokuapp.com/
■ coursera https://ja.coursera.org/learn/competitive-data-science
◾️ Summary article kaggle api related https://qiita.com/uni-3/items/f1fdbeeddd08ca22c80f
https://qiita.com/shunkakinoki/items/1f58e218f8f6b31ad0bf</description>
    </item>
    
  </channel>
</rss>